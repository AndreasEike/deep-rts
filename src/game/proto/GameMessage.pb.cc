// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GameMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GameMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GameMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_GameMessage_2eproto() {
  protobuf_AddDesc_GameMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GameMessage.proto");
  GOOGLE_CHECK(file != NULL);
  GameMessage_descriptor_ = file->message_type(0);
  static const int GameMessage_offsets_[43] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, defeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, statgoldgather_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, statlumbergather_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, statoilgather_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, statunitdamagetaken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, statunitdamagedone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, statunitbuilt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, statunitmilitary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, food_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, consumedfood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, lumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, oil_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, gameticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, numunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitstype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitshealth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitstileid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsdirection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsduration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsharvesttimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsharvestiterator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsspawntimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsbuildtimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitscombattimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitswalkingtimer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsspawntileid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsharvesttarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitswalkinggoal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitbuildentity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitscombattarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsgoldcarry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitslumbercarry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, unitsoilcary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, numtiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, tileids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, tileresources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, tileoccupant_),
  };
  GameMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameMessage_descriptor_,
      GameMessage::internal_default_instance(),
      GameMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(GameMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GameMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameMessage_descriptor_, GameMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GameMessage_2eproto() {
  GameMessage_default_instance_.Shutdown();
  delete GameMessage_reflection_;
}

void protobuf_InitDefaults_GameMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  GameMessage_default_instance_.DefaultConstruct();
  GameMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_GameMessage_2eproto_once_);
void protobuf_InitDefaults_GameMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_GameMessage_2eproto_once_,
                 &protobuf_InitDefaults_GameMessage_2eproto_impl);
}
void protobuf_AddDesc_GameMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_GameMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021GameMessage.proto\"\345\010\n\013GameMessage\022\n\n\002i"
    "d\030\001 \001(\005\022\024\n\010playerId\030\033 \003(\005B\002\020\001\022\024\n\010defeate"
    "d\030\002 \003(\005B\002\020\001\022\032\n\016statGoldGather\030\003 \003(\005B\002\020\001\022"
    "\034\n\020statLumberGather\030\004 \003(\005B\002\020\001\022\031\n\rstatOil"
    "Gather\030\005 \003(\005B\002\020\001\022\037\n\023statUnitDamageTaken\030"
    "\006 \003(\005B\002\020\001\022\036\n\022statUnitDamageDone\030\007 \003(\005B\002\020"
    "\001\022\031\n\rstatUnitBuilt\030\010 \003(\005B\002\020\001\022\034\n\020statUnit"
    "Military\030\t \003(\005B\002\020\001\022\020\n\004food\030\n \003(\005B\002\020\001\022\030\n\014"
    "consumedFood\030\013 \003(\005B\002\020\001\022\020\n\004gold\030\014 \003(\005B\002\020\001"
    "\022\022\n\006lumber\030\r \003(\005B\002\020\001\022\017\n\003oil\030\016 \003(\005B\002\020\001\022\025\n"
    "\tunitCount\030\017 \003(\005B\002\020\001\022\025\n\tgameTicks\030\020 \003(\005B"
    "\002\020\001\022\020\n\010numUnits\030\021 \001(\005\022\024\n\010unitsIDS\030\022 \003(\005B"
    "\002\020\001\022\025\n\tunitsType\030\023 \003(\005B\002\020\001\022\027\n\013unitsHealt"
    "h\030\024 \003(\005B\002\020\001\022\027\n\013unitsTileID\030\025 \003(\005B\002\020\001\022\026\n\n"
    "unitsState\030\026 \003(\005B\002\020\001\022\032\n\016unitsDirection\030\027"
    " \003(\005B\002\020\001\022\031\n\runitsDuration\030\030 \003(\005B\002\020\001\022\035\n\021u"
    "nitsHarvestTimer\030\031 \003(\005B\002\020\001\022 \n\024unitsHarve"
    "stIterator\030\032 \003(\005B\002\020\001\022\033\n\017unitsSpawnTimer\030"
    "( \003(\005B\002\020\001\022\033\n\017unitsBuildTimer\030\034 \003(\005B\002\020\001\022\034"
    "\n\020unitsCombatTimer\030\035 \003(\005B\002\020\001\022\035\n\021unitsWal"
    "kingTimer\030\036 \003(\005B\002\020\001\022\034\n\020unitsSpawnTileID\030"
    "\037 \003(\005B\002\020\001\022\036\n\022unitsHarvestTarget\030  \003(\005B\002\020"
    "\001\022\034\n\020unitsWalkingGoal\030! \003(\005B\002\020\001\022\033\n\017unitB"
    "uildEntity\030\" \003(\005B\002\020\001\022\035\n\021unitsCombatTarge"
    "t\030* \003(\005B\002\020\001\022\032\n\016unitsGoldCarry\030) \003(\005B\002\020\001\022"
    "\034\n\020unitsLumberCarry\030+ \003(\005B\002\020\001\022\030\n\014unitsOi"
    "lCary\030, \003(\005B\002\020\001\022\020\n\010numTiles\030$ \001(\005\022\023\n\007til"
    "eIDs\030% \003(\005B\002\020\001\022\031\n\rtileResources\030& \003(\005B\002\020"
    "\001\022\030\n\014tileOccupant\030\' \003(\005B\002\020\001b\006proto3", 1155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameMessage.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GameMessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_GameMessage_2eproto_once_);
void protobuf_AddDesc_GameMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_GameMessage_2eproto_once_,
                 &protobuf_AddDesc_GameMessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GameMessage_2eproto {
  StaticDescriptorInitializer_GameMessage_2eproto() {
    protobuf_AddDesc_GameMessage_2eproto();
  }
} static_descriptor_initializer_GameMessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMessage::kIdFieldNumber;
const int GameMessage::kPlayerIdFieldNumber;
const int GameMessage::kDefeatedFieldNumber;
const int GameMessage::kStatGoldGatherFieldNumber;
const int GameMessage::kStatLumberGatherFieldNumber;
const int GameMessage::kStatOilGatherFieldNumber;
const int GameMessage::kStatUnitDamageTakenFieldNumber;
const int GameMessage::kStatUnitDamageDoneFieldNumber;
const int GameMessage::kStatUnitBuiltFieldNumber;
const int GameMessage::kStatUnitMilitaryFieldNumber;
const int GameMessage::kFoodFieldNumber;
const int GameMessage::kConsumedFoodFieldNumber;
const int GameMessage::kGoldFieldNumber;
const int GameMessage::kLumberFieldNumber;
const int GameMessage::kOilFieldNumber;
const int GameMessage::kUnitCountFieldNumber;
const int GameMessage::kGameTicksFieldNumber;
const int GameMessage::kNumUnitsFieldNumber;
const int GameMessage::kUnitsIDSFieldNumber;
const int GameMessage::kUnitsTypeFieldNumber;
const int GameMessage::kUnitsHealthFieldNumber;
const int GameMessage::kUnitsTileIDFieldNumber;
const int GameMessage::kUnitsStateFieldNumber;
const int GameMessage::kUnitsDirectionFieldNumber;
const int GameMessage::kUnitsDurationFieldNumber;
const int GameMessage::kUnitsHarvestTimerFieldNumber;
const int GameMessage::kUnitsHarvestIteratorFieldNumber;
const int GameMessage::kUnitsSpawnTimerFieldNumber;
const int GameMessage::kUnitsBuildTimerFieldNumber;
const int GameMessage::kUnitsCombatTimerFieldNumber;
const int GameMessage::kUnitsWalkingTimerFieldNumber;
const int GameMessage::kUnitsSpawnTileIDFieldNumber;
const int GameMessage::kUnitsHarvestTargetFieldNumber;
const int GameMessage::kUnitsWalkingGoalFieldNumber;
const int GameMessage::kUnitBuildEntityFieldNumber;
const int GameMessage::kUnitsCombatTargetFieldNumber;
const int GameMessage::kUnitsGoldCarryFieldNumber;
const int GameMessage::kUnitsLumberCarryFieldNumber;
const int GameMessage::kUnitsOilCaryFieldNumber;
const int GameMessage::kNumTilesFieldNumber;
const int GameMessage::kTileIDsFieldNumber;
const int GameMessage::kTileResourcesFieldNumber;
const int GameMessage::kTileOccupantFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMessage::GameMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_GameMessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage)
}

void GameMessage::InitAsDefaultInstance() {
}

GameMessage::GameMessage(const GameMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GameMessage)
}

void GameMessage::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&numtiles_) -
    reinterpret_cast<char*>(&id_) + sizeof(numtiles_));
  _cached_size_ = 0;
}

GameMessage::~GameMessage() {
  // @@protoc_insertion_point(destructor:GameMessage)
  SharedDtor();
}

void GameMessage::SharedDtor() {
}

void GameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameMessage_descriptor_;
}

const GameMessage& GameMessage::default_instance() {
  protobuf_InitDefaults_GameMessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GameMessage> GameMessage_default_instance_;

GameMessage* GameMessage::New(::google::protobuf::Arena* arena) const {
  GameMessage* n = new GameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage)
  id_ = 0;
  numunits_ = 0;
  numtiles_ = 0;
  playerid_.Clear();
  defeated_.Clear();
  statgoldgather_.Clear();
  statlumbergather_.Clear();
  statoilgather_.Clear();
  statunitdamagetaken_.Clear();
  statunitdamagedone_.Clear();
  statunitbuilt_.Clear();
  statunitmilitary_.Clear();
  food_.Clear();
  consumedfood_.Clear();
  gold_.Clear();
  lumber_.Clear();
  oil_.Clear();
  unitcount_.Clear();
  gameticks_.Clear();
  unitsids_.Clear();
  unitstype_.Clear();
  unitshealth_.Clear();
  unitstileid_.Clear();
  unitsstate_.Clear();
  unitsdirection_.Clear();
  unitsduration_.Clear();
  unitsharvesttimer_.Clear();
  unitsharvestiterator_.Clear();
  unitsspawntimer_.Clear();
  unitsbuildtimer_.Clear();
  unitscombattimer_.Clear();
  unitswalkingtimer_.Clear();
  unitsspawntileid_.Clear();
  unitsharvesttarget_.Clear();
  unitswalkinggoal_.Clear();
  unitbuildentity_.Clear();
  unitscombattarget_.Clear();
  unitsgoldcarry_.Clear();
  unitslumbercarry_.Clear();
  unitsoilcary_.Clear();
  tileids_.Clear();
  tileresources_.Clear();
  tileoccupant_.Clear();
}

bool GameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_defeated;
        break;
      }

      // repeated int32 defeated = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_defeated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_defeated())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_defeated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_statGoldGather;
        break;
      }

      // repeated int32 statGoldGather = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_statGoldGather:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_statgoldgather())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26, input, this->mutable_statgoldgather())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_statLumberGather;
        break;
      }

      // repeated int32 statLumberGather = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_statLumberGather:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_statlumbergather())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34, input, this->mutable_statlumbergather())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_statOilGather;
        break;
      }

      // repeated int32 statOilGather = 5 [packed = true];
      case 5: {
        if (tag == 42) {
         parse_statOilGather:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_statoilgather())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42, input, this->mutable_statoilgather())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_statUnitDamageTaken;
        break;
      }

      // repeated int32 statUnitDamageTaken = 6 [packed = true];
      case 6: {
        if (tag == 50) {
         parse_statUnitDamageTaken:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_statunitdamagetaken())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50, input, this->mutable_statunitdamagetaken())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_statUnitDamageDone;
        break;
      }

      // repeated int32 statUnitDamageDone = 7 [packed = true];
      case 7: {
        if (tag == 58) {
         parse_statUnitDamageDone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_statunitdamagedone())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58, input, this->mutable_statunitdamagedone())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_statUnitBuilt;
        break;
      }

      // repeated int32 statUnitBuilt = 8 [packed = true];
      case 8: {
        if (tag == 66) {
         parse_statUnitBuilt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_statunitbuilt())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66, input, this->mutable_statunitbuilt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_statUnitMilitary;
        break;
      }

      // repeated int32 statUnitMilitary = 9 [packed = true];
      case 9: {
        if (tag == 74) {
         parse_statUnitMilitary:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_statunitmilitary())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74, input, this->mutable_statunitmilitary())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_food;
        break;
      }

      // repeated int32 food = 10 [packed = true];
      case 10: {
        if (tag == 82) {
         parse_food:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_food())));
        } else if (tag == 80) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82, input, this->mutable_food())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_consumedFood;
        break;
      }

      // repeated int32 consumedFood = 11 [packed = true];
      case 11: {
        if (tag == 90) {
         parse_consumedFood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_consumedfood())));
        } else if (tag == 88) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90, input, this->mutable_consumedfood())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_gold;
        break;
      }

      // repeated int32 gold = 12 [packed = true];
      case 12: {
        if (tag == 98) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_gold())));
        } else if (tag == 96) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98, input, this->mutable_gold())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_lumber;
        break;
      }

      // repeated int32 lumber = 13 [packed = true];
      case 13: {
        if (tag == 106) {
         parse_lumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lumber())));
        } else if (tag == 104) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106, input, this->mutable_lumber())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_oil;
        break;
      }

      // repeated int32 oil = 14 [packed = true];
      case 14: {
        if (tag == 114) {
         parse_oil:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_oil())));
        } else if (tag == 112) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 114, input, this->mutable_oil())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_unitCount;
        break;
      }

      // repeated int32 unitCount = 15 [packed = true];
      case 15: {
        if (tag == 122) {
         parse_unitCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitcount())));
        } else if (tag == 120) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 122, input, this->mutable_unitcount())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_gameTicks;
        break;
      }

      // repeated int32 gameTicks = 16 [packed = true];
      case 16: {
        if (tag == 130) {
         parse_gameTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_gameticks())));
        } else if (tag == 128) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 130, input, this->mutable_gameticks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_numUnits;
        break;
      }

      // optional int32 numUnits = 17;
      case 17: {
        if (tag == 136) {
         parse_numUnits:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numunits_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_unitsIDS;
        break;
      }

      // repeated int32 unitsIDS = 18 [packed = true];
      case 18: {
        if (tag == 146) {
         parse_unitsIDS:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsids())));
        } else if (tag == 144) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 146, input, this->mutable_unitsids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_unitsType;
        break;
      }

      // repeated int32 unitsType = 19 [packed = true];
      case 19: {
        if (tag == 154) {
         parse_unitsType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitstype())));
        } else if (tag == 152) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 154, input, this->mutable_unitstype())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_unitsHealth;
        break;
      }

      // repeated int32 unitsHealth = 20 [packed = true];
      case 20: {
        if (tag == 162) {
         parse_unitsHealth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitshealth())));
        } else if (tag == 160) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 162, input, this->mutable_unitshealth())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_unitsTileID;
        break;
      }

      // repeated int32 unitsTileID = 21 [packed = true];
      case 21: {
        if (tag == 170) {
         parse_unitsTileID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitstileid())));
        } else if (tag == 168) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 170, input, this->mutable_unitstileid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_unitsState;
        break;
      }

      // repeated int32 unitsState = 22 [packed = true];
      case 22: {
        if (tag == 178) {
         parse_unitsState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsstate())));
        } else if (tag == 176) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 178, input, this->mutable_unitsstate())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_unitsDirection;
        break;
      }

      // repeated int32 unitsDirection = 23 [packed = true];
      case 23: {
        if (tag == 186) {
         parse_unitsDirection:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsdirection())));
        } else if (tag == 184) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 186, input, this->mutable_unitsdirection())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_unitsDuration;
        break;
      }

      // repeated int32 unitsDuration = 24 [packed = true];
      case 24: {
        if (tag == 194) {
         parse_unitsDuration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsduration())));
        } else if (tag == 192) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 194, input, this->mutable_unitsduration())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_unitsHarvestTimer;
        break;
      }

      // repeated int32 unitsHarvestTimer = 25 [packed = true];
      case 25: {
        if (tag == 202) {
         parse_unitsHarvestTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsharvesttimer())));
        } else if (tag == 200) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 202, input, this->mutable_unitsharvesttimer())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_unitsHarvestIterator;
        break;
      }

      // repeated int32 unitsHarvestIterator = 26 [packed = true];
      case 26: {
        if (tag == 210) {
         parse_unitsHarvestIterator:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsharvestiterator())));
        } else if (tag == 208) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 210, input, this->mutable_unitsharvestiterator())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_playerId;
        break;
      }

      // repeated int32 playerId = 27 [packed = true];
      case 27: {
        if (tag == 218) {
         parse_playerId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_playerid())));
        } else if (tag == 216) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 218, input, this->mutable_playerid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_unitsBuildTimer;
        break;
      }

      // repeated int32 unitsBuildTimer = 28 [packed = true];
      case 28: {
        if (tag == 226) {
         parse_unitsBuildTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsbuildtimer())));
        } else if (tag == 224) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 226, input, this->mutable_unitsbuildtimer())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_unitsCombatTimer;
        break;
      }

      // repeated int32 unitsCombatTimer = 29 [packed = true];
      case 29: {
        if (tag == 234) {
         parse_unitsCombatTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitscombattimer())));
        } else if (tag == 232) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 234, input, this->mutable_unitscombattimer())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_unitsWalkingTimer;
        break;
      }

      // repeated int32 unitsWalkingTimer = 30 [packed = true];
      case 30: {
        if (tag == 242) {
         parse_unitsWalkingTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitswalkingtimer())));
        } else if (tag == 240) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 242, input, this->mutable_unitswalkingtimer())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_unitsSpawnTileID;
        break;
      }

      // repeated int32 unitsSpawnTileID = 31 [packed = true];
      case 31: {
        if (tag == 250) {
         parse_unitsSpawnTileID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsspawntileid())));
        } else if (tag == 248) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 250, input, this->mutable_unitsspawntileid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_unitsHarvestTarget;
        break;
      }

      // repeated int32 unitsHarvestTarget = 32 [packed = true];
      case 32: {
        if (tag == 258) {
         parse_unitsHarvestTarget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsharvesttarget())));
        } else if (tag == 256) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 258, input, this->mutable_unitsharvesttarget())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_unitsWalkingGoal;
        break;
      }

      // repeated int32 unitsWalkingGoal = 33 [packed = true];
      case 33: {
        if (tag == 266) {
         parse_unitsWalkingGoal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitswalkinggoal())));
        } else if (tag == 264) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 266, input, this->mutable_unitswalkinggoal())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_unitBuildEntity;
        break;
      }

      // repeated int32 unitBuildEntity = 34 [packed = true];
      case 34: {
        if (tag == 274) {
         parse_unitBuildEntity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitbuildentity())));
        } else if (tag == 272) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 274, input, this->mutable_unitbuildentity())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_numTiles;
        break;
      }

      // optional int32 numTiles = 36;
      case 36: {
        if (tag == 288) {
         parse_numTiles:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numtiles_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_tileIDs;
        break;
      }

      // repeated int32 tileIDs = 37 [packed = true];
      case 37: {
        if (tag == 298) {
         parse_tileIDs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_tileids())));
        } else if (tag == 296) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 298, input, this->mutable_tileids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_tileResources;
        break;
      }

      // repeated int32 tileResources = 38 [packed = true];
      case 38: {
        if (tag == 306) {
         parse_tileResources:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_tileresources())));
        } else if (tag == 304) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 306, input, this->mutable_tileresources())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_tileOccupant;
        break;
      }

      // repeated int32 tileOccupant = 39 [packed = true];
      case 39: {
        if (tag == 314) {
         parse_tileOccupant:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_tileoccupant())));
        } else if (tag == 312) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 314, input, this->mutable_tileoccupant())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_unitsSpawnTimer;
        break;
      }

      // repeated int32 unitsSpawnTimer = 40 [packed = true];
      case 40: {
        if (tag == 322) {
         parse_unitsSpawnTimer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsspawntimer())));
        } else if (tag == 320) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 322, input, this->mutable_unitsspawntimer())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_unitsGoldCarry;
        break;
      }

      // repeated int32 unitsGoldCarry = 41 [packed = true];
      case 41: {
        if (tag == 330) {
         parse_unitsGoldCarry:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsgoldcarry())));
        } else if (tag == 328) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 330, input, this->mutable_unitsgoldcarry())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_unitsCombatTarget;
        break;
      }

      // repeated int32 unitsCombatTarget = 42 [packed = true];
      case 42: {
        if (tag == 338) {
         parse_unitsCombatTarget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitscombattarget())));
        } else if (tag == 336) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 338, input, this->mutable_unitscombattarget())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(346)) goto parse_unitsLumberCarry;
        break;
      }

      // repeated int32 unitsLumberCarry = 43 [packed = true];
      case 43: {
        if (tag == 346) {
         parse_unitsLumberCarry:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitslumbercarry())));
        } else if (tag == 344) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 346, input, this->mutable_unitslumbercarry())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_unitsOilCary;
        break;
      }

      // repeated int32 unitsOilCary = 44 [packed = true];
      case 44: {
        if (tag == 354) {
         parse_unitsOilCary:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unitsoilcary())));
        } else if (tag == 352) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 354, input, this->mutable_unitsoilcary())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage)
  return false;
#undef DO_
}

void GameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated int32 defeated = 2 [packed = true];
  if (this->defeated_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_defeated_cached_byte_size_);
  }
  for (int i = 0; i < this->defeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->defeated(i), output);
  }

  // repeated int32 statGoldGather = 3 [packed = true];
  if (this->statgoldgather_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_statgoldgather_cached_byte_size_);
  }
  for (int i = 0; i < this->statgoldgather_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->statgoldgather(i), output);
  }

  // repeated int32 statLumberGather = 4 [packed = true];
  if (this->statlumbergather_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_statlumbergather_cached_byte_size_);
  }
  for (int i = 0; i < this->statlumbergather_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->statlumbergather(i), output);
  }

  // repeated int32 statOilGather = 5 [packed = true];
  if (this->statoilgather_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_statoilgather_cached_byte_size_);
  }
  for (int i = 0; i < this->statoilgather_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->statoilgather(i), output);
  }

  // repeated int32 statUnitDamageTaken = 6 [packed = true];
  if (this->statunitdamagetaken_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_statunitdamagetaken_cached_byte_size_);
  }
  for (int i = 0; i < this->statunitdamagetaken_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->statunitdamagetaken(i), output);
  }

  // repeated int32 statUnitDamageDone = 7 [packed = true];
  if (this->statunitdamagedone_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_statunitdamagedone_cached_byte_size_);
  }
  for (int i = 0; i < this->statunitdamagedone_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->statunitdamagedone(i), output);
  }

  // repeated int32 statUnitBuilt = 8 [packed = true];
  if (this->statunitbuilt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_statunitbuilt_cached_byte_size_);
  }
  for (int i = 0; i < this->statunitbuilt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->statunitbuilt(i), output);
  }

  // repeated int32 statUnitMilitary = 9 [packed = true];
  if (this->statunitmilitary_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_statunitmilitary_cached_byte_size_);
  }
  for (int i = 0; i < this->statunitmilitary_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->statunitmilitary(i), output);
  }

  // repeated int32 food = 10 [packed = true];
  if (this->food_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_food_cached_byte_size_);
  }
  for (int i = 0; i < this->food_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->food(i), output);
  }

  // repeated int32 consumedFood = 11 [packed = true];
  if (this->consumedfood_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_consumedfood_cached_byte_size_);
  }
  for (int i = 0; i < this->consumedfood_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->consumedfood(i), output);
  }

  // repeated int32 gold = 12 [packed = true];
  if (this->gold_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_gold_cached_byte_size_);
  }
  for (int i = 0; i < this->gold_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->gold(i), output);
  }

  // repeated int32 lumber = 13 [packed = true];
  if (this->lumber_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_lumber_cached_byte_size_);
  }
  for (int i = 0; i < this->lumber_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->lumber(i), output);
  }

  // repeated int32 oil = 14 [packed = true];
  if (this->oil_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oil_cached_byte_size_);
  }
  for (int i = 0; i < this->oil_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->oil(i), output);
  }

  // repeated int32 unitCount = 15 [packed = true];
  if (this->unitcount_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitcount_cached_byte_size_);
  }
  for (int i = 0; i < this->unitcount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitcount(i), output);
  }

  // repeated int32 gameTicks = 16 [packed = true];
  if (this->gameticks_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_gameticks_cached_byte_size_);
  }
  for (int i = 0; i < this->gameticks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->gameticks(i), output);
  }

  // optional int32 numUnits = 17;
  if (this->numunits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->numunits(), output);
  }

  // repeated int32 unitsIDS = 18 [packed = true];
  if (this->unitsids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsids_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsids(i), output);
  }

  // repeated int32 unitsType = 19 [packed = true];
  if (this->unitstype_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(19, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitstype_cached_byte_size_);
  }
  for (int i = 0; i < this->unitstype_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitstype(i), output);
  }

  // repeated int32 unitsHealth = 20 [packed = true];
  if (this->unitshealth_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitshealth_cached_byte_size_);
  }
  for (int i = 0; i < this->unitshealth_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitshealth(i), output);
  }

  // repeated int32 unitsTileID = 21 [packed = true];
  if (this->unitstileid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(21, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitstileid_cached_byte_size_);
  }
  for (int i = 0; i < this->unitstileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitstileid(i), output);
  }

  // repeated int32 unitsState = 22 [packed = true];
  if (this->unitsstate_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(22, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsstate_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsstate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsstate(i), output);
  }

  // repeated int32 unitsDirection = 23 [packed = true];
  if (this->unitsdirection_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(23, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsdirection_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsdirection_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsdirection(i), output);
  }

  // repeated int32 unitsDuration = 24 [packed = true];
  if (this->unitsduration_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(24, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsduration_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsduration_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsduration(i), output);
  }

  // repeated int32 unitsHarvestTimer = 25 [packed = true];
  if (this->unitsharvesttimer_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(25, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsharvesttimer_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsharvesttimer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsharvesttimer(i), output);
  }

  // repeated int32 unitsHarvestIterator = 26 [packed = true];
  if (this->unitsharvestiterator_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(26, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsharvestiterator_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsharvestiterator_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsharvestiterator(i), output);
  }

  // repeated int32 playerId = 27 [packed = true];
  if (this->playerid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(27, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_playerid_cached_byte_size_);
  }
  for (int i = 0; i < this->playerid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->playerid(i), output);
  }

  // repeated int32 unitsBuildTimer = 28 [packed = true];
  if (this->unitsbuildtimer_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(28, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsbuildtimer_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsbuildtimer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsbuildtimer(i), output);
  }

  // repeated int32 unitsCombatTimer = 29 [packed = true];
  if (this->unitscombattimer_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(29, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitscombattimer_cached_byte_size_);
  }
  for (int i = 0; i < this->unitscombattimer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitscombattimer(i), output);
  }

  // repeated int32 unitsWalkingTimer = 30 [packed = true];
  if (this->unitswalkingtimer_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(30, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitswalkingtimer_cached_byte_size_);
  }
  for (int i = 0; i < this->unitswalkingtimer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitswalkingtimer(i), output);
  }

  // repeated int32 unitsSpawnTileID = 31 [packed = true];
  if (this->unitsspawntileid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(31, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsspawntileid_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsspawntileid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsspawntileid(i), output);
  }

  // repeated int32 unitsHarvestTarget = 32 [packed = true];
  if (this->unitsharvesttarget_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(32, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsharvesttarget_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsharvesttarget_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsharvesttarget(i), output);
  }

  // repeated int32 unitsWalkingGoal = 33 [packed = true];
  if (this->unitswalkinggoal_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(33, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitswalkinggoal_cached_byte_size_);
  }
  for (int i = 0; i < this->unitswalkinggoal_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitswalkinggoal(i), output);
  }

  // repeated int32 unitBuildEntity = 34 [packed = true];
  if (this->unitbuildentity_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(34, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitbuildentity_cached_byte_size_);
  }
  for (int i = 0; i < this->unitbuildentity_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitbuildentity(i), output);
  }

  // optional int32 numTiles = 36;
  if (this->numtiles() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->numtiles(), output);
  }

  // repeated int32 tileIDs = 37 [packed = true];
  if (this->tileids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(37, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_tileids_cached_byte_size_);
  }
  for (int i = 0; i < this->tileids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->tileids(i), output);
  }

  // repeated int32 tileResources = 38 [packed = true];
  if (this->tileresources_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(38, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_tileresources_cached_byte_size_);
  }
  for (int i = 0; i < this->tileresources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->tileresources(i), output);
  }

  // repeated int32 tileOccupant = 39 [packed = true];
  if (this->tileoccupant_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(39, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_tileoccupant_cached_byte_size_);
  }
  for (int i = 0; i < this->tileoccupant_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->tileoccupant(i), output);
  }

  // repeated int32 unitsSpawnTimer = 40 [packed = true];
  if (this->unitsspawntimer_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(40, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsspawntimer_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsspawntimer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsspawntimer(i), output);
  }

  // repeated int32 unitsGoldCarry = 41 [packed = true];
  if (this->unitsgoldcarry_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(41, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsgoldcarry_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsgoldcarry_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsgoldcarry(i), output);
  }

  // repeated int32 unitsCombatTarget = 42 [packed = true];
  if (this->unitscombattarget_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(42, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitscombattarget_cached_byte_size_);
  }
  for (int i = 0; i < this->unitscombattarget_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitscombattarget(i), output);
  }

  // repeated int32 unitsLumberCarry = 43 [packed = true];
  if (this->unitslumbercarry_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(43, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitslumbercarry_cached_byte_size_);
  }
  for (int i = 0; i < this->unitslumbercarry_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitslumbercarry(i), output);
  }

  // repeated int32 unitsOilCary = 44 [packed = true];
  if (this->unitsoilcary_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(44, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unitsoilcary_cached_byte_size_);
  }
  for (int i = 0; i < this->unitsoilcary_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unitsoilcary(i), output);
  }

  // @@protoc_insertion_point(serialize_end:GameMessage)
}

::google::protobuf::uint8* GameMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated int32 defeated = 2 [packed = true];
  if (this->defeated_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _defeated_cached_byte_size_, target);
  }
  for (int i = 0; i < this->defeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->defeated(i), target);
  }

  // repeated int32 statGoldGather = 3 [packed = true];
  if (this->statgoldgather_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _statgoldgather_cached_byte_size_, target);
  }
  for (int i = 0; i < this->statgoldgather_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->statgoldgather(i), target);
  }

  // repeated int32 statLumberGather = 4 [packed = true];
  if (this->statlumbergather_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _statlumbergather_cached_byte_size_, target);
  }
  for (int i = 0; i < this->statlumbergather_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->statlumbergather(i), target);
  }

  // repeated int32 statOilGather = 5 [packed = true];
  if (this->statoilgather_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _statoilgather_cached_byte_size_, target);
  }
  for (int i = 0; i < this->statoilgather_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->statoilgather(i), target);
  }

  // repeated int32 statUnitDamageTaken = 6 [packed = true];
  if (this->statunitdamagetaken_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _statunitdamagetaken_cached_byte_size_, target);
  }
  for (int i = 0; i < this->statunitdamagetaken_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->statunitdamagetaken(i), target);
  }

  // repeated int32 statUnitDamageDone = 7 [packed = true];
  if (this->statunitdamagedone_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _statunitdamagedone_cached_byte_size_, target);
  }
  for (int i = 0; i < this->statunitdamagedone_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->statunitdamagedone(i), target);
  }

  // repeated int32 statUnitBuilt = 8 [packed = true];
  if (this->statunitbuilt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _statunitbuilt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->statunitbuilt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->statunitbuilt(i), target);
  }

  // repeated int32 statUnitMilitary = 9 [packed = true];
  if (this->statunitmilitary_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _statunitmilitary_cached_byte_size_, target);
  }
  for (int i = 0; i < this->statunitmilitary_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->statunitmilitary(i), target);
  }

  // repeated int32 food = 10 [packed = true];
  if (this->food_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _food_cached_byte_size_, target);
  }
  for (int i = 0; i < this->food_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->food(i), target);
  }

  // repeated int32 consumedFood = 11 [packed = true];
  if (this->consumedfood_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _consumedfood_cached_byte_size_, target);
  }
  for (int i = 0; i < this->consumedfood_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->consumedfood(i), target);
  }

  // repeated int32 gold = 12 [packed = true];
  if (this->gold_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _gold_cached_byte_size_, target);
  }
  for (int i = 0; i < this->gold_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->gold(i), target);
  }

  // repeated int32 lumber = 13 [packed = true];
  if (this->lumber_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _lumber_cached_byte_size_, target);
  }
  for (int i = 0; i < this->lumber_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->lumber(i), target);
  }

  // repeated int32 oil = 14 [packed = true];
  if (this->oil_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oil_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oil_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->oil(i), target);
  }

  // repeated int32 unitCount = 15 [packed = true];
  if (this->unitcount_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitcount_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitcount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitcount(i), target);
  }

  // repeated int32 gameTicks = 16 [packed = true];
  if (this->gameticks_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _gameticks_cached_byte_size_, target);
  }
  for (int i = 0; i < this->gameticks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->gameticks(i), target);
  }

  // optional int32 numUnits = 17;
  if (this->numunits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->numunits(), target);
  }

  // repeated int32 unitsIDS = 18 [packed = true];
  if (this->unitsids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsids(i), target);
  }

  // repeated int32 unitsType = 19 [packed = true];
  if (this->unitstype_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      19,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitstype_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitstype_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitstype(i), target);
  }

  // repeated int32 unitsHealth = 20 [packed = true];
  if (this->unitshealth_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitshealth_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitshealth_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitshealth(i), target);
  }

  // repeated int32 unitsTileID = 21 [packed = true];
  if (this->unitstileid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      21,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitstileid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitstileid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitstileid(i), target);
  }

  // repeated int32 unitsState = 22 [packed = true];
  if (this->unitsstate_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      22,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsstate_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsstate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsstate(i), target);
  }

  // repeated int32 unitsDirection = 23 [packed = true];
  if (this->unitsdirection_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      23,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsdirection_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsdirection_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsdirection(i), target);
  }

  // repeated int32 unitsDuration = 24 [packed = true];
  if (this->unitsduration_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      24,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsduration_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsduration_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsduration(i), target);
  }

  // repeated int32 unitsHarvestTimer = 25 [packed = true];
  if (this->unitsharvesttimer_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      25,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsharvesttimer_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsharvesttimer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsharvesttimer(i), target);
  }

  // repeated int32 unitsHarvestIterator = 26 [packed = true];
  if (this->unitsharvestiterator_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      26,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsharvestiterator_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsharvestiterator_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsharvestiterator(i), target);
  }

  // repeated int32 playerId = 27 [packed = true];
  if (this->playerid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      27,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _playerid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->playerid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->playerid(i), target);
  }

  // repeated int32 unitsBuildTimer = 28 [packed = true];
  if (this->unitsbuildtimer_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      28,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsbuildtimer_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsbuildtimer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsbuildtimer(i), target);
  }

  // repeated int32 unitsCombatTimer = 29 [packed = true];
  if (this->unitscombattimer_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      29,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitscombattimer_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitscombattimer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitscombattimer(i), target);
  }

  // repeated int32 unitsWalkingTimer = 30 [packed = true];
  if (this->unitswalkingtimer_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      30,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitswalkingtimer_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitswalkingtimer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitswalkingtimer(i), target);
  }

  // repeated int32 unitsSpawnTileID = 31 [packed = true];
  if (this->unitsspawntileid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      31,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsspawntileid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsspawntileid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsspawntileid(i), target);
  }

  // repeated int32 unitsHarvestTarget = 32 [packed = true];
  if (this->unitsharvesttarget_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      32,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsharvesttarget_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsharvesttarget_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsharvesttarget(i), target);
  }

  // repeated int32 unitsWalkingGoal = 33 [packed = true];
  if (this->unitswalkinggoal_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      33,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitswalkinggoal_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitswalkinggoal_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitswalkinggoal(i), target);
  }

  // repeated int32 unitBuildEntity = 34 [packed = true];
  if (this->unitbuildentity_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      34,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitbuildentity_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitbuildentity_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitbuildentity(i), target);
  }

  // optional int32 numTiles = 36;
  if (this->numtiles() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->numtiles(), target);
  }

  // repeated int32 tileIDs = 37 [packed = true];
  if (this->tileids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      37,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _tileids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->tileids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->tileids(i), target);
  }

  // repeated int32 tileResources = 38 [packed = true];
  if (this->tileresources_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      38,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _tileresources_cached_byte_size_, target);
  }
  for (int i = 0; i < this->tileresources_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->tileresources(i), target);
  }

  // repeated int32 tileOccupant = 39 [packed = true];
  if (this->tileoccupant_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      39,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _tileoccupant_cached_byte_size_, target);
  }
  for (int i = 0; i < this->tileoccupant_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->tileoccupant(i), target);
  }

  // repeated int32 unitsSpawnTimer = 40 [packed = true];
  if (this->unitsspawntimer_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      40,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsspawntimer_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsspawntimer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsspawntimer(i), target);
  }

  // repeated int32 unitsGoldCarry = 41 [packed = true];
  if (this->unitsgoldcarry_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      41,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsgoldcarry_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsgoldcarry_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsgoldcarry(i), target);
  }

  // repeated int32 unitsCombatTarget = 42 [packed = true];
  if (this->unitscombattarget_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      42,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitscombattarget_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitscombattarget_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitscombattarget(i), target);
  }

  // repeated int32 unitsLumberCarry = 43 [packed = true];
  if (this->unitslumbercarry_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      43,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitslumbercarry_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitslumbercarry_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitslumbercarry(i), target);
  }

  // repeated int32 unitsOilCary = 44 [packed = true];
  if (this->unitsoilcary_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      44,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unitsoilcary_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unitsoilcary_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unitsoilcary(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GameMessage)
  return target;
}

size_t GameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage)
  size_t total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 numUnits = 17;
  if (this->numunits() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numunits());
  }

  // optional int32 numTiles = 36;
  if (this->numtiles() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numtiles());
  }

  // repeated int32 playerId = 27 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->playerid_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->playerid(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _playerid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 defeated = 2 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->defeated_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->defeated(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _defeated_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 statGoldGather = 3 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->statgoldgather_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->statgoldgather(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _statgoldgather_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 statLumberGather = 4 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->statlumbergather_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->statlumbergather(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _statlumbergather_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 statOilGather = 5 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->statoilgather_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->statoilgather(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _statoilgather_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 statUnitDamageTaken = 6 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->statunitdamagetaken_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->statunitdamagetaken(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _statunitdamagetaken_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 statUnitDamageDone = 7 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->statunitdamagedone_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->statunitdamagedone(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _statunitdamagedone_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 statUnitBuilt = 8 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->statunitbuilt_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->statunitbuilt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _statunitbuilt_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 statUnitMilitary = 9 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->statunitmilitary_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->statunitmilitary(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _statunitmilitary_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 food = 10 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->food_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->food(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _food_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 consumedFood = 11 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->consumedfood_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->consumedfood(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _consumedfood_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 gold = 12 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->gold_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->gold(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gold_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 lumber = 13 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->lumber_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lumber(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lumber_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 oil = 14 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->oil_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->oil(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oil_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitCount = 15 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitcount_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitcount(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitcount_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 gameTicks = 16 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->gameticks_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->gameticks(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gameticks_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsIDS = 18 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsids_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsids(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsType = 19 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitstype_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitstype(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitstype_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsHealth = 20 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitshealth_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitshealth(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitshealth_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsTileID = 21 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitstileid_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitstileid(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitstileid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsState = 22 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsstate_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsstate(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsstate_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsDirection = 23 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsdirection_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsdirection(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsdirection_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsDuration = 24 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsduration_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsduration(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsduration_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsHarvestTimer = 25 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsharvesttimer_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsharvesttimer(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsharvesttimer_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsHarvestIterator = 26 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsharvestiterator_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsharvestiterator(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsharvestiterator_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsSpawnTimer = 40 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsspawntimer_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsspawntimer(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsspawntimer_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsBuildTimer = 28 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsbuildtimer_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsbuildtimer(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsbuildtimer_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsCombatTimer = 29 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitscombattimer_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitscombattimer(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitscombattimer_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsWalkingTimer = 30 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitswalkingtimer_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitswalkingtimer(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitswalkingtimer_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsSpawnTileID = 31 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsspawntileid_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsspawntileid(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsspawntileid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsHarvestTarget = 32 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsharvesttarget_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsharvesttarget(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsharvesttarget_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsWalkingGoal = 33 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitswalkinggoal_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitswalkinggoal(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitswalkinggoal_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitBuildEntity = 34 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitbuildentity_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitbuildentity(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitbuildentity_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsCombatTarget = 42 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitscombattarget_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitscombattarget(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitscombattarget_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsGoldCarry = 41 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsgoldcarry_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsgoldcarry(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsgoldcarry_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsLumberCarry = 43 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitslumbercarry_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitslumbercarry(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitslumbercarry_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unitsOilCary = 44 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->unitsoilcary_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unitsoilcary(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unitsoilcary_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 tileIDs = 37 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->tileids_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->tileids(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tileids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 tileResources = 38 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->tileresources_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->tileresources(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tileresources_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 tileOccupant = 39 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->tileoccupant_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->tileoccupant(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tileoccupant_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GameMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage)
    UnsafeMergeFrom(*source);
  }
}

void GameMessage::MergeFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GameMessage::UnsafeMergeFrom(const GameMessage& from) {
  GOOGLE_DCHECK(&from != this);
  playerid_.UnsafeMergeFrom(from.playerid_);
  defeated_.UnsafeMergeFrom(from.defeated_);
  statgoldgather_.UnsafeMergeFrom(from.statgoldgather_);
  statlumbergather_.UnsafeMergeFrom(from.statlumbergather_);
  statoilgather_.UnsafeMergeFrom(from.statoilgather_);
  statunitdamagetaken_.UnsafeMergeFrom(from.statunitdamagetaken_);
  statunitdamagedone_.UnsafeMergeFrom(from.statunitdamagedone_);
  statunitbuilt_.UnsafeMergeFrom(from.statunitbuilt_);
  statunitmilitary_.UnsafeMergeFrom(from.statunitmilitary_);
  food_.UnsafeMergeFrom(from.food_);
  consumedfood_.UnsafeMergeFrom(from.consumedfood_);
  gold_.UnsafeMergeFrom(from.gold_);
  lumber_.UnsafeMergeFrom(from.lumber_);
  oil_.UnsafeMergeFrom(from.oil_);
  unitcount_.UnsafeMergeFrom(from.unitcount_);
  gameticks_.UnsafeMergeFrom(from.gameticks_);
  unitsids_.UnsafeMergeFrom(from.unitsids_);
  unitstype_.UnsafeMergeFrom(from.unitstype_);
  unitshealth_.UnsafeMergeFrom(from.unitshealth_);
  unitstileid_.UnsafeMergeFrom(from.unitstileid_);
  unitsstate_.UnsafeMergeFrom(from.unitsstate_);
  unitsdirection_.UnsafeMergeFrom(from.unitsdirection_);
  unitsduration_.UnsafeMergeFrom(from.unitsduration_);
  unitsharvesttimer_.UnsafeMergeFrom(from.unitsharvesttimer_);
  unitsharvestiterator_.UnsafeMergeFrom(from.unitsharvestiterator_);
  unitsspawntimer_.UnsafeMergeFrom(from.unitsspawntimer_);
  unitsbuildtimer_.UnsafeMergeFrom(from.unitsbuildtimer_);
  unitscombattimer_.UnsafeMergeFrom(from.unitscombattimer_);
  unitswalkingtimer_.UnsafeMergeFrom(from.unitswalkingtimer_);
  unitsspawntileid_.UnsafeMergeFrom(from.unitsspawntileid_);
  unitsharvesttarget_.UnsafeMergeFrom(from.unitsharvesttarget_);
  unitswalkinggoal_.UnsafeMergeFrom(from.unitswalkinggoal_);
  unitbuildentity_.UnsafeMergeFrom(from.unitbuildentity_);
  unitscombattarget_.UnsafeMergeFrom(from.unitscombattarget_);
  unitsgoldcarry_.UnsafeMergeFrom(from.unitsgoldcarry_);
  unitslumbercarry_.UnsafeMergeFrom(from.unitslumbercarry_);
  unitsoilcary_.UnsafeMergeFrom(from.unitsoilcary_);
  tileids_.UnsafeMergeFrom(from.tileids_);
  tileresources_.UnsafeMergeFrom(from.tileresources_);
  tileoccupant_.UnsafeMergeFrom(from.tileoccupant_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.numunits() != 0) {
    set_numunits(from.numunits());
  }
  if (from.numtiles() != 0) {
    set_numtiles(from.numtiles());
  }
}

void GameMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMessage::CopyFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GameMessage::IsInitialized() const {

  return true;
}

void GameMessage::Swap(GameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMessage::InternalSwap(GameMessage* other) {
  std::swap(id_, other->id_);
  playerid_.UnsafeArenaSwap(&other->playerid_);
  defeated_.UnsafeArenaSwap(&other->defeated_);
  statgoldgather_.UnsafeArenaSwap(&other->statgoldgather_);
  statlumbergather_.UnsafeArenaSwap(&other->statlumbergather_);
  statoilgather_.UnsafeArenaSwap(&other->statoilgather_);
  statunitdamagetaken_.UnsafeArenaSwap(&other->statunitdamagetaken_);
  statunitdamagedone_.UnsafeArenaSwap(&other->statunitdamagedone_);
  statunitbuilt_.UnsafeArenaSwap(&other->statunitbuilt_);
  statunitmilitary_.UnsafeArenaSwap(&other->statunitmilitary_);
  food_.UnsafeArenaSwap(&other->food_);
  consumedfood_.UnsafeArenaSwap(&other->consumedfood_);
  gold_.UnsafeArenaSwap(&other->gold_);
  lumber_.UnsafeArenaSwap(&other->lumber_);
  oil_.UnsafeArenaSwap(&other->oil_);
  unitcount_.UnsafeArenaSwap(&other->unitcount_);
  gameticks_.UnsafeArenaSwap(&other->gameticks_);
  std::swap(numunits_, other->numunits_);
  unitsids_.UnsafeArenaSwap(&other->unitsids_);
  unitstype_.UnsafeArenaSwap(&other->unitstype_);
  unitshealth_.UnsafeArenaSwap(&other->unitshealth_);
  unitstileid_.UnsafeArenaSwap(&other->unitstileid_);
  unitsstate_.UnsafeArenaSwap(&other->unitsstate_);
  unitsdirection_.UnsafeArenaSwap(&other->unitsdirection_);
  unitsduration_.UnsafeArenaSwap(&other->unitsduration_);
  unitsharvesttimer_.UnsafeArenaSwap(&other->unitsharvesttimer_);
  unitsharvestiterator_.UnsafeArenaSwap(&other->unitsharvestiterator_);
  unitsspawntimer_.UnsafeArenaSwap(&other->unitsspawntimer_);
  unitsbuildtimer_.UnsafeArenaSwap(&other->unitsbuildtimer_);
  unitscombattimer_.UnsafeArenaSwap(&other->unitscombattimer_);
  unitswalkingtimer_.UnsafeArenaSwap(&other->unitswalkingtimer_);
  unitsspawntileid_.UnsafeArenaSwap(&other->unitsspawntileid_);
  unitsharvesttarget_.UnsafeArenaSwap(&other->unitsharvesttarget_);
  unitswalkinggoal_.UnsafeArenaSwap(&other->unitswalkinggoal_);
  unitbuildentity_.UnsafeArenaSwap(&other->unitbuildentity_);
  unitscombattarget_.UnsafeArenaSwap(&other->unitscombattarget_);
  unitsgoldcarry_.UnsafeArenaSwap(&other->unitsgoldcarry_);
  unitslumbercarry_.UnsafeArenaSwap(&other->unitslumbercarry_);
  unitsoilcary_.UnsafeArenaSwap(&other->unitsoilcary_);
  std::swap(numtiles_, other->numtiles_);
  tileids_.UnsafeArenaSwap(&other->tileids_);
  tileresources_.UnsafeArenaSwap(&other->tileresources_);
  tileoccupant_.UnsafeArenaSwap(&other->tileoccupant_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameMessage_descriptor_;
  metadata.reflection = GameMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameMessage

// optional int32 id = 1;
void GameMessage::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 GameMessage::id() const {
  // @@protoc_insertion_point(field_get:GameMessage.id)
  return id_;
}
void GameMessage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.id)
}

// repeated int32 playerId = 27 [packed = true];
int GameMessage::playerid_size() const {
  return playerid_.size();
}
void GameMessage::clear_playerid() {
  playerid_.Clear();
}
::google::protobuf::int32 GameMessage::playerid(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.playerId)
  return playerid_.Get(index);
}
void GameMessage::set_playerid(int index, ::google::protobuf::int32 value) {
  playerid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.playerId)
}
void GameMessage::add_playerid(::google::protobuf::int32 value) {
  playerid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.playerId)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::playerid() const {
  // @@protoc_insertion_point(field_list:GameMessage.playerId)
  return playerid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_playerid() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.playerId)
  return &playerid_;
}

// repeated int32 defeated = 2 [packed = true];
int GameMessage::defeated_size() const {
  return defeated_.size();
}
void GameMessage::clear_defeated() {
  defeated_.Clear();
}
::google::protobuf::int32 GameMessage::defeated(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.defeated)
  return defeated_.Get(index);
}
void GameMessage::set_defeated(int index, ::google::protobuf::int32 value) {
  defeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.defeated)
}
void GameMessage::add_defeated(::google::protobuf::int32 value) {
  defeated_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.defeated)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::defeated() const {
  // @@protoc_insertion_point(field_list:GameMessage.defeated)
  return defeated_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_defeated() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.defeated)
  return &defeated_;
}

// repeated int32 statGoldGather = 3 [packed = true];
int GameMessage::statgoldgather_size() const {
  return statgoldgather_.size();
}
void GameMessage::clear_statgoldgather() {
  statgoldgather_.Clear();
}
::google::protobuf::int32 GameMessage::statgoldgather(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statGoldGather)
  return statgoldgather_.Get(index);
}
void GameMessage::set_statgoldgather(int index, ::google::protobuf::int32 value) {
  statgoldgather_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statGoldGather)
}
void GameMessage::add_statgoldgather(::google::protobuf::int32 value) {
  statgoldgather_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statGoldGather)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statgoldgather() const {
  // @@protoc_insertion_point(field_list:GameMessage.statGoldGather)
  return statgoldgather_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statgoldgather() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statGoldGather)
  return &statgoldgather_;
}

// repeated int32 statLumberGather = 4 [packed = true];
int GameMessage::statlumbergather_size() const {
  return statlumbergather_.size();
}
void GameMessage::clear_statlumbergather() {
  statlumbergather_.Clear();
}
::google::protobuf::int32 GameMessage::statlumbergather(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statLumberGather)
  return statlumbergather_.Get(index);
}
void GameMessage::set_statlumbergather(int index, ::google::protobuf::int32 value) {
  statlumbergather_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statLumberGather)
}
void GameMessage::add_statlumbergather(::google::protobuf::int32 value) {
  statlumbergather_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statLumberGather)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statlumbergather() const {
  // @@protoc_insertion_point(field_list:GameMessage.statLumberGather)
  return statlumbergather_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statlumbergather() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statLumberGather)
  return &statlumbergather_;
}

// repeated int32 statOilGather = 5 [packed = true];
int GameMessage::statoilgather_size() const {
  return statoilgather_.size();
}
void GameMessage::clear_statoilgather() {
  statoilgather_.Clear();
}
::google::protobuf::int32 GameMessage::statoilgather(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statOilGather)
  return statoilgather_.Get(index);
}
void GameMessage::set_statoilgather(int index, ::google::protobuf::int32 value) {
  statoilgather_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statOilGather)
}
void GameMessage::add_statoilgather(::google::protobuf::int32 value) {
  statoilgather_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statOilGather)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statoilgather() const {
  // @@protoc_insertion_point(field_list:GameMessage.statOilGather)
  return statoilgather_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statoilgather() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statOilGather)
  return &statoilgather_;
}

// repeated int32 statUnitDamageTaken = 6 [packed = true];
int GameMessage::statunitdamagetaken_size() const {
  return statunitdamagetaken_.size();
}
void GameMessage::clear_statunitdamagetaken() {
  statunitdamagetaken_.Clear();
}
::google::protobuf::int32 GameMessage::statunitdamagetaken(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitDamageTaken)
  return statunitdamagetaken_.Get(index);
}
void GameMessage::set_statunitdamagetaken(int index, ::google::protobuf::int32 value) {
  statunitdamagetaken_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitDamageTaken)
}
void GameMessage::add_statunitdamagetaken(::google::protobuf::int32 value) {
  statunitdamagetaken_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitDamageTaken)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitdamagetaken() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitDamageTaken)
  return statunitdamagetaken_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitdamagetaken() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitDamageTaken)
  return &statunitdamagetaken_;
}

// repeated int32 statUnitDamageDone = 7 [packed = true];
int GameMessage::statunitdamagedone_size() const {
  return statunitdamagedone_.size();
}
void GameMessage::clear_statunitdamagedone() {
  statunitdamagedone_.Clear();
}
::google::protobuf::int32 GameMessage::statunitdamagedone(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitDamageDone)
  return statunitdamagedone_.Get(index);
}
void GameMessage::set_statunitdamagedone(int index, ::google::protobuf::int32 value) {
  statunitdamagedone_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitDamageDone)
}
void GameMessage::add_statunitdamagedone(::google::protobuf::int32 value) {
  statunitdamagedone_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitDamageDone)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitdamagedone() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitDamageDone)
  return statunitdamagedone_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitdamagedone() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitDamageDone)
  return &statunitdamagedone_;
}

// repeated int32 statUnitBuilt = 8 [packed = true];
int GameMessage::statunitbuilt_size() const {
  return statunitbuilt_.size();
}
void GameMessage::clear_statunitbuilt() {
  statunitbuilt_.Clear();
}
::google::protobuf::int32 GameMessage::statunitbuilt(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitBuilt)
  return statunitbuilt_.Get(index);
}
void GameMessage::set_statunitbuilt(int index, ::google::protobuf::int32 value) {
  statunitbuilt_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitBuilt)
}
void GameMessage::add_statunitbuilt(::google::protobuf::int32 value) {
  statunitbuilt_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitBuilt)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitbuilt() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitBuilt)
  return statunitbuilt_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitbuilt() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitBuilt)
  return &statunitbuilt_;
}

// repeated int32 statUnitMilitary = 9 [packed = true];
int GameMessage::statunitmilitary_size() const {
  return statunitmilitary_.size();
}
void GameMessage::clear_statunitmilitary() {
  statunitmilitary_.Clear();
}
::google::protobuf::int32 GameMessage::statunitmilitary(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitMilitary)
  return statunitmilitary_.Get(index);
}
void GameMessage::set_statunitmilitary(int index, ::google::protobuf::int32 value) {
  statunitmilitary_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitMilitary)
}
void GameMessage::add_statunitmilitary(::google::protobuf::int32 value) {
  statunitmilitary_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitMilitary)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitmilitary() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitMilitary)
  return statunitmilitary_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitmilitary() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitMilitary)
  return &statunitmilitary_;
}

// repeated int32 food = 10 [packed = true];
int GameMessage::food_size() const {
  return food_.size();
}
void GameMessage::clear_food() {
  food_.Clear();
}
::google::protobuf::int32 GameMessage::food(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.food)
  return food_.Get(index);
}
void GameMessage::set_food(int index, ::google::protobuf::int32 value) {
  food_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.food)
}
void GameMessage::add_food(::google::protobuf::int32 value) {
  food_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.food)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::food() const {
  // @@protoc_insertion_point(field_list:GameMessage.food)
  return food_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_food() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.food)
  return &food_;
}

// repeated int32 consumedFood = 11 [packed = true];
int GameMessage::consumedfood_size() const {
  return consumedfood_.size();
}
void GameMessage::clear_consumedfood() {
  consumedfood_.Clear();
}
::google::protobuf::int32 GameMessage::consumedfood(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.consumedFood)
  return consumedfood_.Get(index);
}
void GameMessage::set_consumedfood(int index, ::google::protobuf::int32 value) {
  consumedfood_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.consumedFood)
}
void GameMessage::add_consumedfood(::google::protobuf::int32 value) {
  consumedfood_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.consumedFood)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::consumedfood() const {
  // @@protoc_insertion_point(field_list:GameMessage.consumedFood)
  return consumedfood_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_consumedfood() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.consumedFood)
  return &consumedfood_;
}

// repeated int32 gold = 12 [packed = true];
int GameMessage::gold_size() const {
  return gold_.size();
}
void GameMessage::clear_gold() {
  gold_.Clear();
}
::google::protobuf::int32 GameMessage::gold(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.gold)
  return gold_.Get(index);
}
void GameMessage::set_gold(int index, ::google::protobuf::int32 value) {
  gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.gold)
}
void GameMessage::add_gold(::google::protobuf::int32 value) {
  gold_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.gold)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::gold() const {
  // @@protoc_insertion_point(field_list:GameMessage.gold)
  return gold_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_gold() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.gold)
  return &gold_;
}

// repeated int32 lumber = 13 [packed = true];
int GameMessage::lumber_size() const {
  return lumber_.size();
}
void GameMessage::clear_lumber() {
  lumber_.Clear();
}
::google::protobuf::int32 GameMessage::lumber(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.lumber)
  return lumber_.Get(index);
}
void GameMessage::set_lumber(int index, ::google::protobuf::int32 value) {
  lumber_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.lumber)
}
void GameMessage::add_lumber(::google::protobuf::int32 value) {
  lumber_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.lumber)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::lumber() const {
  // @@protoc_insertion_point(field_list:GameMessage.lumber)
  return lumber_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_lumber() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.lumber)
  return &lumber_;
}

// repeated int32 oil = 14 [packed = true];
int GameMessage::oil_size() const {
  return oil_.size();
}
void GameMessage::clear_oil() {
  oil_.Clear();
}
::google::protobuf::int32 GameMessage::oil(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.oil)
  return oil_.Get(index);
}
void GameMessage::set_oil(int index, ::google::protobuf::int32 value) {
  oil_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.oil)
}
void GameMessage::add_oil(::google::protobuf::int32 value) {
  oil_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.oil)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::oil() const {
  // @@protoc_insertion_point(field_list:GameMessage.oil)
  return oil_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_oil() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.oil)
  return &oil_;
}

// repeated int32 unitCount = 15 [packed = true];
int GameMessage::unitcount_size() const {
  return unitcount_.size();
}
void GameMessage::clear_unitcount() {
  unitcount_.Clear();
}
::google::protobuf::int32 GameMessage::unitcount(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitCount)
  return unitcount_.Get(index);
}
void GameMessage::set_unitcount(int index, ::google::protobuf::int32 value) {
  unitcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitCount)
}
void GameMessage::add_unitcount(::google::protobuf::int32 value) {
  unitcount_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitCount)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitcount() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitCount)
  return unitcount_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitcount() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitCount)
  return &unitcount_;
}

// repeated int32 gameTicks = 16 [packed = true];
int GameMessage::gameticks_size() const {
  return gameticks_.size();
}
void GameMessage::clear_gameticks() {
  gameticks_.Clear();
}
::google::protobuf::int32 GameMessage::gameticks(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.gameTicks)
  return gameticks_.Get(index);
}
void GameMessage::set_gameticks(int index, ::google::protobuf::int32 value) {
  gameticks_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.gameTicks)
}
void GameMessage::add_gameticks(::google::protobuf::int32 value) {
  gameticks_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.gameTicks)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::gameticks() const {
  // @@protoc_insertion_point(field_list:GameMessage.gameTicks)
  return gameticks_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_gameticks() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.gameTicks)
  return &gameticks_;
}

// optional int32 numUnits = 17;
void GameMessage::clear_numunits() {
  numunits_ = 0;
}
::google::protobuf::int32 GameMessage::numunits() const {
  // @@protoc_insertion_point(field_get:GameMessage.numUnits)
  return numunits_;
}
void GameMessage::set_numunits(::google::protobuf::int32 value) {
  
  numunits_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.numUnits)
}

// repeated int32 unitsIDS = 18 [packed = true];
int GameMessage::unitsids_size() const {
  return unitsids_.size();
}
void GameMessage::clear_unitsids() {
  unitsids_.Clear();
}
::google::protobuf::int32 GameMessage::unitsids(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsIDS)
  return unitsids_.Get(index);
}
void GameMessage::set_unitsids(int index, ::google::protobuf::int32 value) {
  unitsids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsIDS)
}
void GameMessage::add_unitsids(::google::protobuf::int32 value) {
  unitsids_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsIDS)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsids() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsIDS)
  return unitsids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsids() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsIDS)
  return &unitsids_;
}

// repeated int32 unitsType = 19 [packed = true];
int GameMessage::unitstype_size() const {
  return unitstype_.size();
}
void GameMessage::clear_unitstype() {
  unitstype_.Clear();
}
::google::protobuf::int32 GameMessage::unitstype(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsType)
  return unitstype_.Get(index);
}
void GameMessage::set_unitstype(int index, ::google::protobuf::int32 value) {
  unitstype_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsType)
}
void GameMessage::add_unitstype(::google::protobuf::int32 value) {
  unitstype_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsType)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitstype() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsType)
  return unitstype_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitstype() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsType)
  return &unitstype_;
}

// repeated int32 unitsHealth = 20 [packed = true];
int GameMessage::unitshealth_size() const {
  return unitshealth_.size();
}
void GameMessage::clear_unitshealth() {
  unitshealth_.Clear();
}
::google::protobuf::int32 GameMessage::unitshealth(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHealth)
  return unitshealth_.Get(index);
}
void GameMessage::set_unitshealth(int index, ::google::protobuf::int32 value) {
  unitshealth_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHealth)
}
void GameMessage::add_unitshealth(::google::protobuf::int32 value) {
  unitshealth_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHealth)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitshealth() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHealth)
  return unitshealth_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitshealth() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHealth)
  return &unitshealth_;
}

// repeated int32 unitsTileID = 21 [packed = true];
int GameMessage::unitstileid_size() const {
  return unitstileid_.size();
}
void GameMessage::clear_unitstileid() {
  unitstileid_.Clear();
}
::google::protobuf::int32 GameMessage::unitstileid(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsTileID)
  return unitstileid_.Get(index);
}
void GameMessage::set_unitstileid(int index, ::google::protobuf::int32 value) {
  unitstileid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsTileID)
}
void GameMessage::add_unitstileid(::google::protobuf::int32 value) {
  unitstileid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsTileID)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitstileid() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsTileID)
  return unitstileid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitstileid() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsTileID)
  return &unitstileid_;
}

// repeated int32 unitsState = 22 [packed = true];
int GameMessage::unitsstate_size() const {
  return unitsstate_.size();
}
void GameMessage::clear_unitsstate() {
  unitsstate_.Clear();
}
::google::protobuf::int32 GameMessage::unitsstate(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsState)
  return unitsstate_.Get(index);
}
void GameMessage::set_unitsstate(int index, ::google::protobuf::int32 value) {
  unitsstate_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsState)
}
void GameMessage::add_unitsstate(::google::protobuf::int32 value) {
  unitsstate_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsState)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsstate() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsState)
  return unitsstate_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsstate() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsState)
  return &unitsstate_;
}

// repeated int32 unitsDirection = 23 [packed = true];
int GameMessage::unitsdirection_size() const {
  return unitsdirection_.size();
}
void GameMessage::clear_unitsdirection() {
  unitsdirection_.Clear();
}
::google::protobuf::int32 GameMessage::unitsdirection(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsDirection)
  return unitsdirection_.Get(index);
}
void GameMessage::set_unitsdirection(int index, ::google::protobuf::int32 value) {
  unitsdirection_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsDirection)
}
void GameMessage::add_unitsdirection(::google::protobuf::int32 value) {
  unitsdirection_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsDirection)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsdirection() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsDirection)
  return unitsdirection_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsdirection() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsDirection)
  return &unitsdirection_;
}

// repeated int32 unitsDuration = 24 [packed = true];
int GameMessage::unitsduration_size() const {
  return unitsduration_.size();
}
void GameMessage::clear_unitsduration() {
  unitsduration_.Clear();
}
::google::protobuf::int32 GameMessage::unitsduration(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsDuration)
  return unitsduration_.Get(index);
}
void GameMessage::set_unitsduration(int index, ::google::protobuf::int32 value) {
  unitsduration_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsDuration)
}
void GameMessage::add_unitsduration(::google::protobuf::int32 value) {
  unitsduration_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsDuration)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsduration() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsDuration)
  return unitsduration_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsduration() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsDuration)
  return &unitsduration_;
}

// repeated int32 unitsHarvestTimer = 25 [packed = true];
int GameMessage::unitsharvesttimer_size() const {
  return unitsharvesttimer_.size();
}
void GameMessage::clear_unitsharvesttimer() {
  unitsharvesttimer_.Clear();
}
::google::protobuf::int32 GameMessage::unitsharvesttimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHarvestTimer)
  return unitsharvesttimer_.Get(index);
}
void GameMessage::set_unitsharvesttimer(int index, ::google::protobuf::int32 value) {
  unitsharvesttimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHarvestTimer)
}
void GameMessage::add_unitsharvesttimer(::google::protobuf::int32 value) {
  unitsharvesttimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHarvestTimer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsharvesttimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHarvestTimer)
  return unitsharvesttimer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsharvesttimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHarvestTimer)
  return &unitsharvesttimer_;
}

// repeated int32 unitsHarvestIterator = 26 [packed = true];
int GameMessage::unitsharvestiterator_size() const {
  return unitsharvestiterator_.size();
}
void GameMessage::clear_unitsharvestiterator() {
  unitsharvestiterator_.Clear();
}
::google::protobuf::int32 GameMessage::unitsharvestiterator(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHarvestIterator)
  return unitsharvestiterator_.Get(index);
}
void GameMessage::set_unitsharvestiterator(int index, ::google::protobuf::int32 value) {
  unitsharvestiterator_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHarvestIterator)
}
void GameMessage::add_unitsharvestiterator(::google::protobuf::int32 value) {
  unitsharvestiterator_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHarvestIterator)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsharvestiterator() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHarvestIterator)
  return unitsharvestiterator_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsharvestiterator() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHarvestIterator)
  return &unitsharvestiterator_;
}

// repeated int32 unitsSpawnTimer = 40 [packed = true];
int GameMessage::unitsspawntimer_size() const {
  return unitsspawntimer_.size();
}
void GameMessage::clear_unitsspawntimer() {
  unitsspawntimer_.Clear();
}
::google::protobuf::int32 GameMessage::unitsspawntimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsSpawnTimer)
  return unitsspawntimer_.Get(index);
}
void GameMessage::set_unitsspawntimer(int index, ::google::protobuf::int32 value) {
  unitsspawntimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsSpawnTimer)
}
void GameMessage::add_unitsspawntimer(::google::protobuf::int32 value) {
  unitsspawntimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsSpawnTimer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsspawntimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsSpawnTimer)
  return unitsspawntimer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsspawntimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsSpawnTimer)
  return &unitsspawntimer_;
}

// repeated int32 unitsBuildTimer = 28 [packed = true];
int GameMessage::unitsbuildtimer_size() const {
  return unitsbuildtimer_.size();
}
void GameMessage::clear_unitsbuildtimer() {
  unitsbuildtimer_.Clear();
}
::google::protobuf::int32 GameMessage::unitsbuildtimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsBuildTimer)
  return unitsbuildtimer_.Get(index);
}
void GameMessage::set_unitsbuildtimer(int index, ::google::protobuf::int32 value) {
  unitsbuildtimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsBuildTimer)
}
void GameMessage::add_unitsbuildtimer(::google::protobuf::int32 value) {
  unitsbuildtimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsBuildTimer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsbuildtimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsBuildTimer)
  return unitsbuildtimer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsbuildtimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsBuildTimer)
  return &unitsbuildtimer_;
}

// repeated int32 unitsCombatTimer = 29 [packed = true];
int GameMessage::unitscombattimer_size() const {
  return unitscombattimer_.size();
}
void GameMessage::clear_unitscombattimer() {
  unitscombattimer_.Clear();
}
::google::protobuf::int32 GameMessage::unitscombattimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsCombatTimer)
  return unitscombattimer_.Get(index);
}
void GameMessage::set_unitscombattimer(int index, ::google::protobuf::int32 value) {
  unitscombattimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsCombatTimer)
}
void GameMessage::add_unitscombattimer(::google::protobuf::int32 value) {
  unitscombattimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsCombatTimer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitscombattimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsCombatTimer)
  return unitscombattimer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitscombattimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsCombatTimer)
  return &unitscombattimer_;
}

// repeated int32 unitsWalkingTimer = 30 [packed = true];
int GameMessage::unitswalkingtimer_size() const {
  return unitswalkingtimer_.size();
}
void GameMessage::clear_unitswalkingtimer() {
  unitswalkingtimer_.Clear();
}
::google::protobuf::int32 GameMessage::unitswalkingtimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsWalkingTimer)
  return unitswalkingtimer_.Get(index);
}
void GameMessage::set_unitswalkingtimer(int index, ::google::protobuf::int32 value) {
  unitswalkingtimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsWalkingTimer)
}
void GameMessage::add_unitswalkingtimer(::google::protobuf::int32 value) {
  unitswalkingtimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsWalkingTimer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitswalkingtimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsWalkingTimer)
  return unitswalkingtimer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitswalkingtimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsWalkingTimer)
  return &unitswalkingtimer_;
}

// repeated int32 unitsSpawnTileID = 31 [packed = true];
int GameMessage::unitsspawntileid_size() const {
  return unitsspawntileid_.size();
}
void GameMessage::clear_unitsspawntileid() {
  unitsspawntileid_.Clear();
}
::google::protobuf::int32 GameMessage::unitsspawntileid(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsSpawnTileID)
  return unitsspawntileid_.Get(index);
}
void GameMessage::set_unitsspawntileid(int index, ::google::protobuf::int32 value) {
  unitsspawntileid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsSpawnTileID)
}
void GameMessage::add_unitsspawntileid(::google::protobuf::int32 value) {
  unitsspawntileid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsSpawnTileID)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsspawntileid() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsSpawnTileID)
  return unitsspawntileid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsspawntileid() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsSpawnTileID)
  return &unitsspawntileid_;
}

// repeated int32 unitsHarvestTarget = 32 [packed = true];
int GameMessage::unitsharvesttarget_size() const {
  return unitsharvesttarget_.size();
}
void GameMessage::clear_unitsharvesttarget() {
  unitsharvesttarget_.Clear();
}
::google::protobuf::int32 GameMessage::unitsharvesttarget(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHarvestTarget)
  return unitsharvesttarget_.Get(index);
}
void GameMessage::set_unitsharvesttarget(int index, ::google::protobuf::int32 value) {
  unitsharvesttarget_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHarvestTarget)
}
void GameMessage::add_unitsharvesttarget(::google::protobuf::int32 value) {
  unitsharvesttarget_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHarvestTarget)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsharvesttarget() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHarvestTarget)
  return unitsharvesttarget_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsharvesttarget() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHarvestTarget)
  return &unitsharvesttarget_;
}

// repeated int32 unitsWalkingGoal = 33 [packed = true];
int GameMessage::unitswalkinggoal_size() const {
  return unitswalkinggoal_.size();
}
void GameMessage::clear_unitswalkinggoal() {
  unitswalkinggoal_.Clear();
}
::google::protobuf::int32 GameMessage::unitswalkinggoal(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsWalkingGoal)
  return unitswalkinggoal_.Get(index);
}
void GameMessage::set_unitswalkinggoal(int index, ::google::protobuf::int32 value) {
  unitswalkinggoal_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsWalkingGoal)
}
void GameMessage::add_unitswalkinggoal(::google::protobuf::int32 value) {
  unitswalkinggoal_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsWalkingGoal)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitswalkinggoal() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsWalkingGoal)
  return unitswalkinggoal_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitswalkinggoal() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsWalkingGoal)
  return &unitswalkinggoal_;
}

// repeated int32 unitBuildEntity = 34 [packed = true];
int GameMessage::unitbuildentity_size() const {
  return unitbuildentity_.size();
}
void GameMessage::clear_unitbuildentity() {
  unitbuildentity_.Clear();
}
::google::protobuf::int32 GameMessage::unitbuildentity(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitBuildEntity)
  return unitbuildentity_.Get(index);
}
void GameMessage::set_unitbuildentity(int index, ::google::protobuf::int32 value) {
  unitbuildentity_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitBuildEntity)
}
void GameMessage::add_unitbuildentity(::google::protobuf::int32 value) {
  unitbuildentity_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitBuildEntity)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitbuildentity() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitBuildEntity)
  return unitbuildentity_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitbuildentity() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitBuildEntity)
  return &unitbuildentity_;
}

// repeated int32 unitsCombatTarget = 42 [packed = true];
int GameMessage::unitscombattarget_size() const {
  return unitscombattarget_.size();
}
void GameMessage::clear_unitscombattarget() {
  unitscombattarget_.Clear();
}
::google::protobuf::int32 GameMessage::unitscombattarget(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsCombatTarget)
  return unitscombattarget_.Get(index);
}
void GameMessage::set_unitscombattarget(int index, ::google::protobuf::int32 value) {
  unitscombattarget_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsCombatTarget)
}
void GameMessage::add_unitscombattarget(::google::protobuf::int32 value) {
  unitscombattarget_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsCombatTarget)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitscombattarget() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsCombatTarget)
  return unitscombattarget_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitscombattarget() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsCombatTarget)
  return &unitscombattarget_;
}

// repeated int32 unitsGoldCarry = 41 [packed = true];
int GameMessage::unitsgoldcarry_size() const {
  return unitsgoldcarry_.size();
}
void GameMessage::clear_unitsgoldcarry() {
  unitsgoldcarry_.Clear();
}
::google::protobuf::int32 GameMessage::unitsgoldcarry(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsGoldCarry)
  return unitsgoldcarry_.Get(index);
}
void GameMessage::set_unitsgoldcarry(int index, ::google::protobuf::int32 value) {
  unitsgoldcarry_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsGoldCarry)
}
void GameMessage::add_unitsgoldcarry(::google::protobuf::int32 value) {
  unitsgoldcarry_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsGoldCarry)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsgoldcarry() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsGoldCarry)
  return unitsgoldcarry_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsgoldcarry() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsGoldCarry)
  return &unitsgoldcarry_;
}

// repeated int32 unitsLumberCarry = 43 [packed = true];
int GameMessage::unitslumbercarry_size() const {
  return unitslumbercarry_.size();
}
void GameMessage::clear_unitslumbercarry() {
  unitslumbercarry_.Clear();
}
::google::protobuf::int32 GameMessage::unitslumbercarry(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsLumberCarry)
  return unitslumbercarry_.Get(index);
}
void GameMessage::set_unitslumbercarry(int index, ::google::protobuf::int32 value) {
  unitslumbercarry_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsLumberCarry)
}
void GameMessage::add_unitslumbercarry(::google::protobuf::int32 value) {
  unitslumbercarry_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsLumberCarry)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitslumbercarry() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsLumberCarry)
  return unitslumbercarry_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitslumbercarry() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsLumberCarry)
  return &unitslumbercarry_;
}

// repeated int32 unitsOilCary = 44 [packed = true];
int GameMessage::unitsoilcary_size() const {
  return unitsoilcary_.size();
}
void GameMessage::clear_unitsoilcary() {
  unitsoilcary_.Clear();
}
::google::protobuf::int32 GameMessage::unitsoilcary(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsOilCary)
  return unitsoilcary_.Get(index);
}
void GameMessage::set_unitsoilcary(int index, ::google::protobuf::int32 value) {
  unitsoilcary_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsOilCary)
}
void GameMessage::add_unitsoilcary(::google::protobuf::int32 value) {
  unitsoilcary_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsOilCary)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsoilcary() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsOilCary)
  return unitsoilcary_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsoilcary() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsOilCary)
  return &unitsoilcary_;
}

// optional int32 numTiles = 36;
void GameMessage::clear_numtiles() {
  numtiles_ = 0;
}
::google::protobuf::int32 GameMessage::numtiles() const {
  // @@protoc_insertion_point(field_get:GameMessage.numTiles)
  return numtiles_;
}
void GameMessage::set_numtiles(::google::protobuf::int32 value) {
  
  numtiles_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.numTiles)
}

// repeated int32 tileIDs = 37 [packed = true];
int GameMessage::tileids_size() const {
  return tileids_.size();
}
void GameMessage::clear_tileids() {
  tileids_.Clear();
}
::google::protobuf::int32 GameMessage::tileids(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.tileIDs)
  return tileids_.Get(index);
}
void GameMessage::set_tileids(int index, ::google::protobuf::int32 value) {
  tileids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.tileIDs)
}
void GameMessage::add_tileids(::google::protobuf::int32 value) {
  tileids_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.tileIDs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::tileids() const {
  // @@protoc_insertion_point(field_list:GameMessage.tileIDs)
  return tileids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_tileids() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.tileIDs)
  return &tileids_;
}

// repeated int32 tileResources = 38 [packed = true];
int GameMessage::tileresources_size() const {
  return tileresources_.size();
}
void GameMessage::clear_tileresources() {
  tileresources_.Clear();
}
::google::protobuf::int32 GameMessage::tileresources(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.tileResources)
  return tileresources_.Get(index);
}
void GameMessage::set_tileresources(int index, ::google::protobuf::int32 value) {
  tileresources_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.tileResources)
}
void GameMessage::add_tileresources(::google::protobuf::int32 value) {
  tileresources_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.tileResources)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::tileresources() const {
  // @@protoc_insertion_point(field_list:GameMessage.tileResources)
  return tileresources_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_tileresources() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.tileResources)
  return &tileresources_;
}

// repeated int32 tileOccupant = 39 [packed = true];
int GameMessage::tileoccupant_size() const {
  return tileoccupant_.size();
}
void GameMessage::clear_tileoccupant() {
  tileoccupant_.Clear();
}
::google::protobuf::int32 GameMessage::tileoccupant(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.tileOccupant)
  return tileoccupant_.Get(index);
}
void GameMessage::set_tileoccupant(int index, ::google::protobuf::int32 value) {
  tileoccupant_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.tileOccupant)
}
void GameMessage::add_tileoccupant(::google::protobuf::int32 value) {
  tileoccupant_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.tileOccupant)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::tileoccupant() const {
  // @@protoc_insertion_point(field_list:GameMessage.tileOccupant)
  return tileoccupant_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_tileoccupant() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.tileOccupant)
  return &tileoccupant_;
}

inline const GameMessage* GameMessage::internal_default_instance() {
  return &GameMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
