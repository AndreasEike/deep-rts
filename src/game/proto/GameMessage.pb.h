// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#ifndef PROTOBUF_GameMessage_2eproto__INCLUDED
#define PROTOBUF_GameMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class GameMessage;
class GameMessageDefaultTypeInternal;
extern GameMessageDefaultTypeInternal _GameMessage_default_instance_;

namespace protobuf_GameMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GameMessage_2eproto

// ===================================================================

class GameMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage) */ {
 public:
  GameMessage();
  virtual ~GameMessage();

  GameMessage(const GameMessage& from);

  inline GameMessage& operator=(const GameMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMessage& default_instance();

  static inline const GameMessage* internal_default_instance() {
    return reinterpret_cast<const GameMessage*>(
               &_GameMessage_default_instance_);
  }

  void Swap(GameMessage* other);

  // implements Message ----------------------------------------------

  inline GameMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  GameMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameMessage& from);
  void MergeFrom(const GameMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 playerId = 27 [packed = true];
  int playerid_size() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 27;
  ::google::protobuf::int32 playerid(int index) const;
  void set_playerid(int index, ::google::protobuf::int32 value);
  void add_playerid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      playerid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_playerid();

  // repeated int32 defeated = 2 [packed = true];
  int defeated_size() const;
  void clear_defeated();
  static const int kDefeatedFieldNumber = 2;
  ::google::protobuf::int32 defeated(int index) const;
  void set_defeated(int index, ::google::protobuf::int32 value);
  void add_defeated(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      defeated() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_defeated();

  // repeated int32 statGoldGather = 3 [packed = true];
  int statgoldgather_size() const;
  void clear_statgoldgather();
  static const int kStatGoldGatherFieldNumber = 3;
  ::google::protobuf::int32 statgoldgather(int index) const;
  void set_statgoldgather(int index, ::google::protobuf::int32 value);
  void add_statgoldgather(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      statgoldgather() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_statgoldgather();

  // repeated int32 statLumberGather = 4 [packed = true];
  int statlumbergather_size() const;
  void clear_statlumbergather();
  static const int kStatLumberGatherFieldNumber = 4;
  ::google::protobuf::int32 statlumbergather(int index) const;
  void set_statlumbergather(int index, ::google::protobuf::int32 value);
  void add_statlumbergather(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      statlumbergather() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_statlumbergather();

  // repeated int32 statOilGather = 5 [packed = true];
  int statoilgather_size() const;
  void clear_statoilgather();
  static const int kStatOilGatherFieldNumber = 5;
  ::google::protobuf::int32 statoilgather(int index) const;
  void set_statoilgather(int index, ::google::protobuf::int32 value);
  void add_statoilgather(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      statoilgather() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_statoilgather();

  // repeated int32 statUnitDamageTaken = 6 [packed = true];
  int statunitdamagetaken_size() const;
  void clear_statunitdamagetaken();
  static const int kStatUnitDamageTakenFieldNumber = 6;
  ::google::protobuf::int32 statunitdamagetaken(int index) const;
  void set_statunitdamagetaken(int index, ::google::protobuf::int32 value);
  void add_statunitdamagetaken(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      statunitdamagetaken() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_statunitdamagetaken();

  // repeated int32 statUnitDamageDone = 7 [packed = true];
  int statunitdamagedone_size() const;
  void clear_statunitdamagedone();
  static const int kStatUnitDamageDoneFieldNumber = 7;
  ::google::protobuf::int32 statunitdamagedone(int index) const;
  void set_statunitdamagedone(int index, ::google::protobuf::int32 value);
  void add_statunitdamagedone(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      statunitdamagedone() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_statunitdamagedone();

  // repeated int32 statUnitBuilt = 8 [packed = true];
  int statunitbuilt_size() const;
  void clear_statunitbuilt();
  static const int kStatUnitBuiltFieldNumber = 8;
  ::google::protobuf::int32 statunitbuilt(int index) const;
  void set_statunitbuilt(int index, ::google::protobuf::int32 value);
  void add_statunitbuilt(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      statunitbuilt() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_statunitbuilt();

  // repeated int32 statUnitMilitary = 9 [packed = true];
  int statunitmilitary_size() const;
  void clear_statunitmilitary();
  static const int kStatUnitMilitaryFieldNumber = 9;
  ::google::protobuf::int32 statunitmilitary(int index) const;
  void set_statunitmilitary(int index, ::google::protobuf::int32 value);
  void add_statunitmilitary(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      statunitmilitary() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_statunitmilitary();

  // repeated int32 food = 10 [packed = true];
  int food_size() const;
  void clear_food();
  static const int kFoodFieldNumber = 10;
  ::google::protobuf::int32 food(int index) const;
  void set_food(int index, ::google::protobuf::int32 value);
  void add_food(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      food() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_food();

  // repeated int32 consumedFood = 11 [packed = true];
  int consumedfood_size() const;
  void clear_consumedfood();
  static const int kConsumedFoodFieldNumber = 11;
  ::google::protobuf::int32 consumedfood(int index) const;
  void set_consumedfood(int index, ::google::protobuf::int32 value);
  void add_consumedfood(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      consumedfood() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_consumedfood();

  // repeated int32 gold = 12 [packed = true];
  int gold_size() const;
  void clear_gold();
  static const int kGoldFieldNumber = 12;
  ::google::protobuf::int32 gold(int index) const;
  void set_gold(int index, ::google::protobuf::int32 value);
  void add_gold(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gold() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gold();

  // repeated int32 lumber = 13 [packed = true];
  int lumber_size() const;
  void clear_lumber();
  static const int kLumberFieldNumber = 13;
  ::google::protobuf::int32 lumber(int index) const;
  void set_lumber(int index, ::google::protobuf::int32 value);
  void add_lumber(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lumber() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lumber();

  // repeated int32 oil = 14 [packed = true];
  int oil_size() const;
  void clear_oil();
  static const int kOilFieldNumber = 14;
  ::google::protobuf::int32 oil(int index) const;
  void set_oil(int index, ::google::protobuf::int32 value);
  void add_oil(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      oil() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_oil();

  // repeated int32 unitCount = 15 [packed = true];
  int unitcount_size() const;
  void clear_unitcount();
  static const int kUnitCountFieldNumber = 15;
  ::google::protobuf::int32 unitcount(int index) const;
  void set_unitcount(int index, ::google::protobuf::int32 value);
  void add_unitcount(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitcount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitcount();

  // repeated int32 gameTicks = 16 [packed = true];
  int gameticks_size() const;
  void clear_gameticks();
  static const int kGameTicksFieldNumber = 16;
  ::google::protobuf::int32 gameticks(int index) const;
  void set_gameticks(int index, ::google::protobuf::int32 value);
  void add_gameticks(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gameticks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gameticks();

  // repeated int32 unitsIDS = 18 [packed = true];
  int unitsids_size() const;
  void clear_unitsids();
  static const int kUnitsIDSFieldNumber = 18;
  ::google::protobuf::int32 unitsids(int index) const;
  void set_unitsids(int index, ::google::protobuf::int32 value);
  void add_unitsids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsids();

  // repeated int32 unitsType = 19 [packed = true];
  int unitstype_size() const;
  void clear_unitstype();
  static const int kUnitsTypeFieldNumber = 19;
  ::google::protobuf::int32 unitstype(int index) const;
  void set_unitstype(int index, ::google::protobuf::int32 value);
  void add_unitstype(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitstype() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitstype();

  // repeated int32 unitsHealth = 20 [packed = true];
  int unitshealth_size() const;
  void clear_unitshealth();
  static const int kUnitsHealthFieldNumber = 20;
  ::google::protobuf::int32 unitshealth(int index) const;
  void set_unitshealth(int index, ::google::protobuf::int32 value);
  void add_unitshealth(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitshealth() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitshealth();

  // repeated int32 unitsTileID = 21 [packed = true];
  int unitstileid_size() const;
  void clear_unitstileid();
  static const int kUnitsTileIDFieldNumber = 21;
  ::google::protobuf::int32 unitstileid(int index) const;
  void set_unitstileid(int index, ::google::protobuf::int32 value);
  void add_unitstileid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitstileid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitstileid();

  // repeated int32 unitsState = 22 [packed = true];
  int unitsstate_size() const;
  void clear_unitsstate();
  static const int kUnitsStateFieldNumber = 22;
  ::google::protobuf::int32 unitsstate(int index) const;
  void set_unitsstate(int index, ::google::protobuf::int32 value);
  void add_unitsstate(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsstate() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsstate();

  // repeated int32 unitsDirection = 23 [packed = true];
  int unitsdirection_size() const;
  void clear_unitsdirection();
  static const int kUnitsDirectionFieldNumber = 23;
  ::google::protobuf::int32 unitsdirection(int index) const;
  void set_unitsdirection(int index, ::google::protobuf::int32 value);
  void add_unitsdirection(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsdirection() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsdirection();

  // repeated int32 unitsDuration = 24 [packed = true];
  int unitsduration_size() const;
  void clear_unitsduration();
  static const int kUnitsDurationFieldNumber = 24;
  ::google::protobuf::int32 unitsduration(int index) const;
  void set_unitsduration(int index, ::google::protobuf::int32 value);
  void add_unitsduration(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsduration() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsduration();

  // repeated int32 unitsHarvestTimer = 25 [packed = true];
  int unitsharvesttimer_size() const;
  void clear_unitsharvesttimer();
  static const int kUnitsHarvestTimerFieldNumber = 25;
  ::google::protobuf::int32 unitsharvesttimer(int index) const;
  void set_unitsharvesttimer(int index, ::google::protobuf::int32 value);
  void add_unitsharvesttimer(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsharvesttimer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsharvesttimer();

  // repeated int32 unitsHarvestIterator = 26 [packed = true];
  int unitsharvestiterator_size() const;
  void clear_unitsharvestiterator();
  static const int kUnitsHarvestIteratorFieldNumber = 26;
  ::google::protobuf::int32 unitsharvestiterator(int index) const;
  void set_unitsharvestiterator(int index, ::google::protobuf::int32 value);
  void add_unitsharvestiterator(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsharvestiterator() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsharvestiterator();

  // repeated int32 unitsSpawnTimer = 40 [packed = true];
  int unitsspawntimer_size() const;
  void clear_unitsspawntimer();
  static const int kUnitsSpawnTimerFieldNumber = 40;
  ::google::protobuf::int32 unitsspawntimer(int index) const;
  void set_unitsspawntimer(int index, ::google::protobuf::int32 value);
  void add_unitsspawntimer(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsspawntimer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsspawntimer();

  // repeated int32 unitsBuildTimer = 28 [packed = true];
  int unitsbuildtimer_size() const;
  void clear_unitsbuildtimer();
  static const int kUnitsBuildTimerFieldNumber = 28;
  ::google::protobuf::int32 unitsbuildtimer(int index) const;
  void set_unitsbuildtimer(int index, ::google::protobuf::int32 value);
  void add_unitsbuildtimer(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsbuildtimer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsbuildtimer();

  // repeated int32 unitsCombatTimer = 29 [packed = true];
  int unitscombattimer_size() const;
  void clear_unitscombattimer();
  static const int kUnitsCombatTimerFieldNumber = 29;
  ::google::protobuf::int32 unitscombattimer(int index) const;
  void set_unitscombattimer(int index, ::google::protobuf::int32 value);
  void add_unitscombattimer(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitscombattimer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitscombattimer();

  // repeated int32 unitsWalkingTimer = 30 [packed = true];
  int unitswalkingtimer_size() const;
  void clear_unitswalkingtimer();
  static const int kUnitsWalkingTimerFieldNumber = 30;
  ::google::protobuf::int32 unitswalkingtimer(int index) const;
  void set_unitswalkingtimer(int index, ::google::protobuf::int32 value);
  void add_unitswalkingtimer(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitswalkingtimer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitswalkingtimer();

  // repeated int32 unitsSpawnTileID = 31 [packed = true];
  int unitsspawntileid_size() const;
  void clear_unitsspawntileid();
  static const int kUnitsSpawnTileIDFieldNumber = 31;
  ::google::protobuf::int32 unitsspawntileid(int index) const;
  void set_unitsspawntileid(int index, ::google::protobuf::int32 value);
  void add_unitsspawntileid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsspawntileid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsspawntileid();

  // repeated int32 unitsHarvestTarget = 32 [packed = true];
  int unitsharvesttarget_size() const;
  void clear_unitsharvesttarget();
  static const int kUnitsHarvestTargetFieldNumber = 32;
  ::google::protobuf::int32 unitsharvesttarget(int index) const;
  void set_unitsharvesttarget(int index, ::google::protobuf::int32 value);
  void add_unitsharvesttarget(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsharvesttarget() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsharvesttarget();

  // repeated int32 unitsWalkingGoal = 33 [packed = true];
  int unitswalkinggoal_size() const;
  void clear_unitswalkinggoal();
  static const int kUnitsWalkingGoalFieldNumber = 33;
  ::google::protobuf::int32 unitswalkinggoal(int index) const;
  void set_unitswalkinggoal(int index, ::google::protobuf::int32 value);
  void add_unitswalkinggoal(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitswalkinggoal() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitswalkinggoal();

  // repeated int32 unitBuildEntity = 34 [packed = true];
  int unitbuildentity_size() const;
  void clear_unitbuildentity();
  static const int kUnitBuildEntityFieldNumber = 34;
  ::google::protobuf::int32 unitbuildentity(int index) const;
  void set_unitbuildentity(int index, ::google::protobuf::int32 value);
  void add_unitbuildentity(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitbuildentity() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitbuildentity();

  // repeated int32 unitsCombatTarget = 42 [packed = true];
  int unitscombattarget_size() const;
  void clear_unitscombattarget();
  static const int kUnitsCombatTargetFieldNumber = 42;
  ::google::protobuf::int32 unitscombattarget(int index) const;
  void set_unitscombattarget(int index, ::google::protobuf::int32 value);
  void add_unitscombattarget(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitscombattarget() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitscombattarget();

  // repeated int32 unitsGoldCarry = 41 [packed = true];
  int unitsgoldcarry_size() const;
  void clear_unitsgoldcarry();
  static const int kUnitsGoldCarryFieldNumber = 41;
  ::google::protobuf::int32 unitsgoldcarry(int index) const;
  void set_unitsgoldcarry(int index, ::google::protobuf::int32 value);
  void add_unitsgoldcarry(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsgoldcarry() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsgoldcarry();

  // repeated int32 unitsLumberCarry = 43 [packed = true];
  int unitslumbercarry_size() const;
  void clear_unitslumbercarry();
  static const int kUnitsLumberCarryFieldNumber = 43;
  ::google::protobuf::int32 unitslumbercarry(int index) const;
  void set_unitslumbercarry(int index, ::google::protobuf::int32 value);
  void add_unitslumbercarry(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitslumbercarry() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitslumbercarry();

  // repeated int32 unitsOilCary = 44 [packed = true];
  int unitsoilcary_size() const;
  void clear_unitsoilcary();
  static const int kUnitsOilCaryFieldNumber = 44;
  ::google::protobuf::int32 unitsoilcary(int index) const;
  void set_unitsoilcary(int index, ::google::protobuf::int32 value);
  void add_unitsoilcary(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unitsoilcary() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unitsoilcary();

  // repeated int32 tileIDs = 37 [packed = true];
  int tileids_size() const;
  void clear_tileids();
  static const int kTileIDsFieldNumber = 37;
  ::google::protobuf::int32 tileids(int index) const;
  void set_tileids(int index, ::google::protobuf::int32 value);
  void add_tileids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tileids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tileids();

  // repeated int32 tileResources = 38 [packed = true];
  int tileresources_size() const;
  void clear_tileresources();
  static const int kTileResourcesFieldNumber = 38;
  ::google::protobuf::int32 tileresources(int index) const;
  void set_tileresources(int index, ::google::protobuf::int32 value);
  void add_tileresources(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tileresources() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tileresources();

  // repeated int32 tileOccupant = 39 [packed = true];
  int tileoccupant_size() const;
  void clear_tileoccupant();
  static const int kTileOccupantFieldNumber = 39;
  ::google::protobuf::int32 tileoccupant(int index) const;
  void set_tileoccupant(int index, ::google::protobuf::int32 value);
  void add_tileoccupant(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tileoccupant() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tileoccupant();

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 numUnits = 17;
  void clear_numunits();
  static const int kNumUnitsFieldNumber = 17;
  ::google::protobuf::int32 numunits() const;
  void set_numunits(::google::protobuf::int32 value);

  // int32 numTiles = 36;
  void clear_numtiles();
  static const int kNumTilesFieldNumber = 36;
  ::google::protobuf::int32 numtiles() const;
  void set_numtiles(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > playerid_;
  mutable int _playerid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > defeated_;
  mutable int _defeated_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > statgoldgather_;
  mutable int _statgoldgather_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > statlumbergather_;
  mutable int _statlumbergather_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > statoilgather_;
  mutable int _statoilgather_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > statunitdamagetaken_;
  mutable int _statunitdamagetaken_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > statunitdamagedone_;
  mutable int _statunitdamagedone_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > statunitbuilt_;
  mutable int _statunitbuilt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > statunitmilitary_;
  mutable int _statunitmilitary_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > food_;
  mutable int _food_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > consumedfood_;
  mutable int _consumedfood_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gold_;
  mutable int _gold_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lumber_;
  mutable int _lumber_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > oil_;
  mutable int _oil_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitcount_;
  mutable int _unitcount_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gameticks_;
  mutable int _gameticks_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsids_;
  mutable int _unitsids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitstype_;
  mutable int _unitstype_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitshealth_;
  mutable int _unitshealth_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitstileid_;
  mutable int _unitstileid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsstate_;
  mutable int _unitsstate_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsdirection_;
  mutable int _unitsdirection_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsduration_;
  mutable int _unitsduration_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsharvesttimer_;
  mutable int _unitsharvesttimer_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsharvestiterator_;
  mutable int _unitsharvestiterator_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsspawntimer_;
  mutable int _unitsspawntimer_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsbuildtimer_;
  mutable int _unitsbuildtimer_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitscombattimer_;
  mutable int _unitscombattimer_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitswalkingtimer_;
  mutable int _unitswalkingtimer_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsspawntileid_;
  mutable int _unitsspawntileid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsharvesttarget_;
  mutable int _unitsharvesttarget_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitswalkinggoal_;
  mutable int _unitswalkinggoal_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitbuildentity_;
  mutable int _unitbuildentity_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitscombattarget_;
  mutable int _unitscombattarget_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsgoldcarry_;
  mutable int _unitsgoldcarry_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitslumbercarry_;
  mutable int _unitslumbercarry_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unitsoilcary_;
  mutable int _unitsoilcary_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tileids_;
  mutable int _tileids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tileresources_;
  mutable int _tileresources_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tileoccupant_;
  mutable int _tileoccupant_cached_byte_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 numunits_;
  ::google::protobuf::int32 numtiles_;
  mutable int _cached_size_;
  friend struct  protobuf_GameMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GameMessage

// int32 id = 1;
inline void GameMessage::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 GameMessage::id() const {
  // @@protoc_insertion_point(field_get:GameMessage.id)
  return id_;
}
inline void GameMessage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.id)
}

// repeated int32 playerId = 27 [packed = true];
inline int GameMessage::playerid_size() const {
  return playerid_.size();
}
inline void GameMessage::clear_playerid() {
  playerid_.Clear();
}
inline ::google::protobuf::int32 GameMessage::playerid(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.playerId)
  return playerid_.Get(index);
}
inline void GameMessage::set_playerid(int index, ::google::protobuf::int32 value) {
  playerid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.playerId)
}
inline void GameMessage::add_playerid(::google::protobuf::int32 value) {
  playerid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.playerId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::playerid() const {
  // @@protoc_insertion_point(field_list:GameMessage.playerId)
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_playerid() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.playerId)
  return &playerid_;
}

// repeated int32 defeated = 2 [packed = true];
inline int GameMessage::defeated_size() const {
  return defeated_.size();
}
inline void GameMessage::clear_defeated() {
  defeated_.Clear();
}
inline ::google::protobuf::int32 GameMessage::defeated(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.defeated)
  return defeated_.Get(index);
}
inline void GameMessage::set_defeated(int index, ::google::protobuf::int32 value) {
  defeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.defeated)
}
inline void GameMessage::add_defeated(::google::protobuf::int32 value) {
  defeated_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.defeated)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::defeated() const {
  // @@protoc_insertion_point(field_list:GameMessage.defeated)
  return defeated_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_defeated() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.defeated)
  return &defeated_;
}

// repeated int32 statGoldGather = 3 [packed = true];
inline int GameMessage::statgoldgather_size() const {
  return statgoldgather_.size();
}
inline void GameMessage::clear_statgoldgather() {
  statgoldgather_.Clear();
}
inline ::google::protobuf::int32 GameMessage::statgoldgather(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statGoldGather)
  return statgoldgather_.Get(index);
}
inline void GameMessage::set_statgoldgather(int index, ::google::protobuf::int32 value) {
  statgoldgather_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statGoldGather)
}
inline void GameMessage::add_statgoldgather(::google::protobuf::int32 value) {
  statgoldgather_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statGoldGather)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statgoldgather() const {
  // @@protoc_insertion_point(field_list:GameMessage.statGoldGather)
  return statgoldgather_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statgoldgather() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statGoldGather)
  return &statgoldgather_;
}

// repeated int32 statLumberGather = 4 [packed = true];
inline int GameMessage::statlumbergather_size() const {
  return statlumbergather_.size();
}
inline void GameMessage::clear_statlumbergather() {
  statlumbergather_.Clear();
}
inline ::google::protobuf::int32 GameMessage::statlumbergather(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statLumberGather)
  return statlumbergather_.Get(index);
}
inline void GameMessage::set_statlumbergather(int index, ::google::protobuf::int32 value) {
  statlumbergather_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statLumberGather)
}
inline void GameMessage::add_statlumbergather(::google::protobuf::int32 value) {
  statlumbergather_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statLumberGather)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statlumbergather() const {
  // @@protoc_insertion_point(field_list:GameMessage.statLumberGather)
  return statlumbergather_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statlumbergather() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statLumberGather)
  return &statlumbergather_;
}

// repeated int32 statOilGather = 5 [packed = true];
inline int GameMessage::statoilgather_size() const {
  return statoilgather_.size();
}
inline void GameMessage::clear_statoilgather() {
  statoilgather_.Clear();
}
inline ::google::protobuf::int32 GameMessage::statoilgather(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statOilGather)
  return statoilgather_.Get(index);
}
inline void GameMessage::set_statoilgather(int index, ::google::protobuf::int32 value) {
  statoilgather_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statOilGather)
}
inline void GameMessage::add_statoilgather(::google::protobuf::int32 value) {
  statoilgather_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statOilGather)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statoilgather() const {
  // @@protoc_insertion_point(field_list:GameMessage.statOilGather)
  return statoilgather_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statoilgather() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statOilGather)
  return &statoilgather_;
}

// repeated int32 statUnitDamageTaken = 6 [packed = true];
inline int GameMessage::statunitdamagetaken_size() const {
  return statunitdamagetaken_.size();
}
inline void GameMessage::clear_statunitdamagetaken() {
  statunitdamagetaken_.Clear();
}
inline ::google::protobuf::int32 GameMessage::statunitdamagetaken(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitDamageTaken)
  return statunitdamagetaken_.Get(index);
}
inline void GameMessage::set_statunitdamagetaken(int index, ::google::protobuf::int32 value) {
  statunitdamagetaken_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitDamageTaken)
}
inline void GameMessage::add_statunitdamagetaken(::google::protobuf::int32 value) {
  statunitdamagetaken_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitDamageTaken)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitdamagetaken() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitDamageTaken)
  return statunitdamagetaken_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitdamagetaken() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitDamageTaken)
  return &statunitdamagetaken_;
}

// repeated int32 statUnitDamageDone = 7 [packed = true];
inline int GameMessage::statunitdamagedone_size() const {
  return statunitdamagedone_.size();
}
inline void GameMessage::clear_statunitdamagedone() {
  statunitdamagedone_.Clear();
}
inline ::google::protobuf::int32 GameMessage::statunitdamagedone(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitDamageDone)
  return statunitdamagedone_.Get(index);
}
inline void GameMessage::set_statunitdamagedone(int index, ::google::protobuf::int32 value) {
  statunitdamagedone_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitDamageDone)
}
inline void GameMessage::add_statunitdamagedone(::google::protobuf::int32 value) {
  statunitdamagedone_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitDamageDone)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitdamagedone() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitDamageDone)
  return statunitdamagedone_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitdamagedone() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitDamageDone)
  return &statunitdamagedone_;
}

// repeated int32 statUnitBuilt = 8 [packed = true];
inline int GameMessage::statunitbuilt_size() const {
  return statunitbuilt_.size();
}
inline void GameMessage::clear_statunitbuilt() {
  statunitbuilt_.Clear();
}
inline ::google::protobuf::int32 GameMessage::statunitbuilt(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitBuilt)
  return statunitbuilt_.Get(index);
}
inline void GameMessage::set_statunitbuilt(int index, ::google::protobuf::int32 value) {
  statunitbuilt_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitBuilt)
}
inline void GameMessage::add_statunitbuilt(::google::protobuf::int32 value) {
  statunitbuilt_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitBuilt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitbuilt() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitBuilt)
  return statunitbuilt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitbuilt() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitBuilt)
  return &statunitbuilt_;
}

// repeated int32 statUnitMilitary = 9 [packed = true];
inline int GameMessage::statunitmilitary_size() const {
  return statunitmilitary_.size();
}
inline void GameMessage::clear_statunitmilitary() {
  statunitmilitary_.Clear();
}
inline ::google::protobuf::int32 GameMessage::statunitmilitary(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.statUnitMilitary)
  return statunitmilitary_.Get(index);
}
inline void GameMessage::set_statunitmilitary(int index, ::google::protobuf::int32 value) {
  statunitmilitary_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.statUnitMilitary)
}
inline void GameMessage::add_statunitmilitary(::google::protobuf::int32 value) {
  statunitmilitary_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.statUnitMilitary)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::statunitmilitary() const {
  // @@protoc_insertion_point(field_list:GameMessage.statUnitMilitary)
  return statunitmilitary_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_statunitmilitary() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.statUnitMilitary)
  return &statunitmilitary_;
}

// repeated int32 food = 10 [packed = true];
inline int GameMessage::food_size() const {
  return food_.size();
}
inline void GameMessage::clear_food() {
  food_.Clear();
}
inline ::google::protobuf::int32 GameMessage::food(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.food)
  return food_.Get(index);
}
inline void GameMessage::set_food(int index, ::google::protobuf::int32 value) {
  food_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.food)
}
inline void GameMessage::add_food(::google::protobuf::int32 value) {
  food_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.food)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::food() const {
  // @@protoc_insertion_point(field_list:GameMessage.food)
  return food_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_food() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.food)
  return &food_;
}

// repeated int32 consumedFood = 11 [packed = true];
inline int GameMessage::consumedfood_size() const {
  return consumedfood_.size();
}
inline void GameMessage::clear_consumedfood() {
  consumedfood_.Clear();
}
inline ::google::protobuf::int32 GameMessage::consumedfood(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.consumedFood)
  return consumedfood_.Get(index);
}
inline void GameMessage::set_consumedfood(int index, ::google::protobuf::int32 value) {
  consumedfood_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.consumedFood)
}
inline void GameMessage::add_consumedfood(::google::protobuf::int32 value) {
  consumedfood_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.consumedFood)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::consumedfood() const {
  // @@protoc_insertion_point(field_list:GameMessage.consumedFood)
  return consumedfood_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_consumedfood() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.consumedFood)
  return &consumedfood_;
}

// repeated int32 gold = 12 [packed = true];
inline int GameMessage::gold_size() const {
  return gold_.size();
}
inline void GameMessage::clear_gold() {
  gold_.Clear();
}
inline ::google::protobuf::int32 GameMessage::gold(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.gold)
  return gold_.Get(index);
}
inline void GameMessage::set_gold(int index, ::google::protobuf::int32 value) {
  gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.gold)
}
inline void GameMessage::add_gold(::google::protobuf::int32 value) {
  gold_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.gold)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::gold() const {
  // @@protoc_insertion_point(field_list:GameMessage.gold)
  return gold_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_gold() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.gold)
  return &gold_;
}

// repeated int32 lumber = 13 [packed = true];
inline int GameMessage::lumber_size() const {
  return lumber_.size();
}
inline void GameMessage::clear_lumber() {
  lumber_.Clear();
}
inline ::google::protobuf::int32 GameMessage::lumber(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.lumber)
  return lumber_.Get(index);
}
inline void GameMessage::set_lumber(int index, ::google::protobuf::int32 value) {
  lumber_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.lumber)
}
inline void GameMessage::add_lumber(::google::protobuf::int32 value) {
  lumber_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.lumber)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::lumber() const {
  // @@protoc_insertion_point(field_list:GameMessage.lumber)
  return lumber_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_lumber() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.lumber)
  return &lumber_;
}

// repeated int32 oil = 14 [packed = true];
inline int GameMessage::oil_size() const {
  return oil_.size();
}
inline void GameMessage::clear_oil() {
  oil_.Clear();
}
inline ::google::protobuf::int32 GameMessage::oil(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.oil)
  return oil_.Get(index);
}
inline void GameMessage::set_oil(int index, ::google::protobuf::int32 value) {
  oil_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.oil)
}
inline void GameMessage::add_oil(::google::protobuf::int32 value) {
  oil_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.oil)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::oil() const {
  // @@protoc_insertion_point(field_list:GameMessage.oil)
  return oil_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_oil() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.oil)
  return &oil_;
}

// repeated int32 unitCount = 15 [packed = true];
inline int GameMessage::unitcount_size() const {
  return unitcount_.size();
}
inline void GameMessage::clear_unitcount() {
  unitcount_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitcount(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitCount)
  return unitcount_.Get(index);
}
inline void GameMessage::set_unitcount(int index, ::google::protobuf::int32 value) {
  unitcount_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitCount)
}
inline void GameMessage::add_unitcount(::google::protobuf::int32 value) {
  unitcount_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitcount() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitCount)
  return unitcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitcount() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitCount)
  return &unitcount_;
}

// repeated int32 gameTicks = 16 [packed = true];
inline int GameMessage::gameticks_size() const {
  return gameticks_.size();
}
inline void GameMessage::clear_gameticks() {
  gameticks_.Clear();
}
inline ::google::protobuf::int32 GameMessage::gameticks(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.gameTicks)
  return gameticks_.Get(index);
}
inline void GameMessage::set_gameticks(int index, ::google::protobuf::int32 value) {
  gameticks_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.gameTicks)
}
inline void GameMessage::add_gameticks(::google::protobuf::int32 value) {
  gameticks_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.gameTicks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::gameticks() const {
  // @@protoc_insertion_point(field_list:GameMessage.gameTicks)
  return gameticks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_gameticks() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.gameTicks)
  return &gameticks_;
}

// int32 numUnits = 17;
inline void GameMessage::clear_numunits() {
  numunits_ = 0;
}
inline ::google::protobuf::int32 GameMessage::numunits() const {
  // @@protoc_insertion_point(field_get:GameMessage.numUnits)
  return numunits_;
}
inline void GameMessage::set_numunits(::google::protobuf::int32 value) {
  
  numunits_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.numUnits)
}

// repeated int32 unitsIDS = 18 [packed = true];
inline int GameMessage::unitsids_size() const {
  return unitsids_.size();
}
inline void GameMessage::clear_unitsids() {
  unitsids_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsids(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsIDS)
  return unitsids_.Get(index);
}
inline void GameMessage::set_unitsids(int index, ::google::protobuf::int32 value) {
  unitsids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsIDS)
}
inline void GameMessage::add_unitsids(::google::protobuf::int32 value) {
  unitsids_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsIDS)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsids() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsIDS)
  return unitsids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsids() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsIDS)
  return &unitsids_;
}

// repeated int32 unitsType = 19 [packed = true];
inline int GameMessage::unitstype_size() const {
  return unitstype_.size();
}
inline void GameMessage::clear_unitstype() {
  unitstype_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitstype(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsType)
  return unitstype_.Get(index);
}
inline void GameMessage::set_unitstype(int index, ::google::protobuf::int32 value) {
  unitstype_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsType)
}
inline void GameMessage::add_unitstype(::google::protobuf::int32 value) {
  unitstype_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitstype() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsType)
  return unitstype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitstype() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsType)
  return &unitstype_;
}

// repeated int32 unitsHealth = 20 [packed = true];
inline int GameMessage::unitshealth_size() const {
  return unitshealth_.size();
}
inline void GameMessage::clear_unitshealth() {
  unitshealth_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitshealth(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHealth)
  return unitshealth_.Get(index);
}
inline void GameMessage::set_unitshealth(int index, ::google::protobuf::int32 value) {
  unitshealth_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHealth)
}
inline void GameMessage::add_unitshealth(::google::protobuf::int32 value) {
  unitshealth_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHealth)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitshealth() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHealth)
  return unitshealth_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitshealth() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHealth)
  return &unitshealth_;
}

// repeated int32 unitsTileID = 21 [packed = true];
inline int GameMessage::unitstileid_size() const {
  return unitstileid_.size();
}
inline void GameMessage::clear_unitstileid() {
  unitstileid_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitstileid(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsTileID)
  return unitstileid_.Get(index);
}
inline void GameMessage::set_unitstileid(int index, ::google::protobuf::int32 value) {
  unitstileid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsTileID)
}
inline void GameMessage::add_unitstileid(::google::protobuf::int32 value) {
  unitstileid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsTileID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitstileid() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsTileID)
  return unitstileid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitstileid() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsTileID)
  return &unitstileid_;
}

// repeated int32 unitsState = 22 [packed = true];
inline int GameMessage::unitsstate_size() const {
  return unitsstate_.size();
}
inline void GameMessage::clear_unitsstate() {
  unitsstate_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsstate(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsState)
  return unitsstate_.Get(index);
}
inline void GameMessage::set_unitsstate(int index, ::google::protobuf::int32 value) {
  unitsstate_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsState)
}
inline void GameMessage::add_unitsstate(::google::protobuf::int32 value) {
  unitsstate_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsState)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsstate() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsState)
  return unitsstate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsstate() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsState)
  return &unitsstate_;
}

// repeated int32 unitsDirection = 23 [packed = true];
inline int GameMessage::unitsdirection_size() const {
  return unitsdirection_.size();
}
inline void GameMessage::clear_unitsdirection() {
  unitsdirection_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsdirection(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsDirection)
  return unitsdirection_.Get(index);
}
inline void GameMessage::set_unitsdirection(int index, ::google::protobuf::int32 value) {
  unitsdirection_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsDirection)
}
inline void GameMessage::add_unitsdirection(::google::protobuf::int32 value) {
  unitsdirection_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsDirection)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsdirection() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsDirection)
  return unitsdirection_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsdirection() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsDirection)
  return &unitsdirection_;
}

// repeated int32 unitsDuration = 24 [packed = true];
inline int GameMessage::unitsduration_size() const {
  return unitsduration_.size();
}
inline void GameMessage::clear_unitsduration() {
  unitsduration_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsduration(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsDuration)
  return unitsduration_.Get(index);
}
inline void GameMessage::set_unitsduration(int index, ::google::protobuf::int32 value) {
  unitsduration_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsDuration)
}
inline void GameMessage::add_unitsduration(::google::protobuf::int32 value) {
  unitsduration_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsDuration)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsduration() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsDuration)
  return unitsduration_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsduration() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsDuration)
  return &unitsduration_;
}

// repeated int32 unitsHarvestTimer = 25 [packed = true];
inline int GameMessage::unitsharvesttimer_size() const {
  return unitsharvesttimer_.size();
}
inline void GameMessage::clear_unitsharvesttimer() {
  unitsharvesttimer_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsharvesttimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHarvestTimer)
  return unitsharvesttimer_.Get(index);
}
inline void GameMessage::set_unitsharvesttimer(int index, ::google::protobuf::int32 value) {
  unitsharvesttimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHarvestTimer)
}
inline void GameMessage::add_unitsharvesttimer(::google::protobuf::int32 value) {
  unitsharvesttimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHarvestTimer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsharvesttimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHarvestTimer)
  return unitsharvesttimer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsharvesttimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHarvestTimer)
  return &unitsharvesttimer_;
}

// repeated int32 unitsHarvestIterator = 26 [packed = true];
inline int GameMessage::unitsharvestiterator_size() const {
  return unitsharvestiterator_.size();
}
inline void GameMessage::clear_unitsharvestiterator() {
  unitsharvestiterator_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsharvestiterator(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHarvestIterator)
  return unitsharvestiterator_.Get(index);
}
inline void GameMessage::set_unitsharvestiterator(int index, ::google::protobuf::int32 value) {
  unitsharvestiterator_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHarvestIterator)
}
inline void GameMessage::add_unitsharvestiterator(::google::protobuf::int32 value) {
  unitsharvestiterator_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHarvestIterator)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsharvestiterator() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHarvestIterator)
  return unitsharvestiterator_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsharvestiterator() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHarvestIterator)
  return &unitsharvestiterator_;
}

// repeated int32 unitsSpawnTimer = 40 [packed = true];
inline int GameMessage::unitsspawntimer_size() const {
  return unitsspawntimer_.size();
}
inline void GameMessage::clear_unitsspawntimer() {
  unitsspawntimer_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsspawntimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsSpawnTimer)
  return unitsspawntimer_.Get(index);
}
inline void GameMessage::set_unitsspawntimer(int index, ::google::protobuf::int32 value) {
  unitsspawntimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsSpawnTimer)
}
inline void GameMessage::add_unitsspawntimer(::google::protobuf::int32 value) {
  unitsspawntimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsSpawnTimer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsspawntimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsSpawnTimer)
  return unitsspawntimer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsspawntimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsSpawnTimer)
  return &unitsspawntimer_;
}

// repeated int32 unitsBuildTimer = 28 [packed = true];
inline int GameMessage::unitsbuildtimer_size() const {
  return unitsbuildtimer_.size();
}
inline void GameMessage::clear_unitsbuildtimer() {
  unitsbuildtimer_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsbuildtimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsBuildTimer)
  return unitsbuildtimer_.Get(index);
}
inline void GameMessage::set_unitsbuildtimer(int index, ::google::protobuf::int32 value) {
  unitsbuildtimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsBuildTimer)
}
inline void GameMessage::add_unitsbuildtimer(::google::protobuf::int32 value) {
  unitsbuildtimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsBuildTimer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsbuildtimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsBuildTimer)
  return unitsbuildtimer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsbuildtimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsBuildTimer)
  return &unitsbuildtimer_;
}

// repeated int32 unitsCombatTimer = 29 [packed = true];
inline int GameMessage::unitscombattimer_size() const {
  return unitscombattimer_.size();
}
inline void GameMessage::clear_unitscombattimer() {
  unitscombattimer_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitscombattimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsCombatTimer)
  return unitscombattimer_.Get(index);
}
inline void GameMessage::set_unitscombattimer(int index, ::google::protobuf::int32 value) {
  unitscombattimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsCombatTimer)
}
inline void GameMessage::add_unitscombattimer(::google::protobuf::int32 value) {
  unitscombattimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsCombatTimer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitscombattimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsCombatTimer)
  return unitscombattimer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitscombattimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsCombatTimer)
  return &unitscombattimer_;
}

// repeated int32 unitsWalkingTimer = 30 [packed = true];
inline int GameMessage::unitswalkingtimer_size() const {
  return unitswalkingtimer_.size();
}
inline void GameMessage::clear_unitswalkingtimer() {
  unitswalkingtimer_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitswalkingtimer(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsWalkingTimer)
  return unitswalkingtimer_.Get(index);
}
inline void GameMessage::set_unitswalkingtimer(int index, ::google::protobuf::int32 value) {
  unitswalkingtimer_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsWalkingTimer)
}
inline void GameMessage::add_unitswalkingtimer(::google::protobuf::int32 value) {
  unitswalkingtimer_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsWalkingTimer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitswalkingtimer() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsWalkingTimer)
  return unitswalkingtimer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitswalkingtimer() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsWalkingTimer)
  return &unitswalkingtimer_;
}

// repeated int32 unitsSpawnTileID = 31 [packed = true];
inline int GameMessage::unitsspawntileid_size() const {
  return unitsspawntileid_.size();
}
inline void GameMessage::clear_unitsspawntileid() {
  unitsspawntileid_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsspawntileid(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsSpawnTileID)
  return unitsspawntileid_.Get(index);
}
inline void GameMessage::set_unitsspawntileid(int index, ::google::protobuf::int32 value) {
  unitsspawntileid_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsSpawnTileID)
}
inline void GameMessage::add_unitsspawntileid(::google::protobuf::int32 value) {
  unitsspawntileid_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsSpawnTileID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsspawntileid() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsSpawnTileID)
  return unitsspawntileid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsspawntileid() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsSpawnTileID)
  return &unitsspawntileid_;
}

// repeated int32 unitsHarvestTarget = 32 [packed = true];
inline int GameMessage::unitsharvesttarget_size() const {
  return unitsharvesttarget_.size();
}
inline void GameMessage::clear_unitsharvesttarget() {
  unitsharvesttarget_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsharvesttarget(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsHarvestTarget)
  return unitsharvesttarget_.Get(index);
}
inline void GameMessage::set_unitsharvesttarget(int index, ::google::protobuf::int32 value) {
  unitsharvesttarget_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsHarvestTarget)
}
inline void GameMessage::add_unitsharvesttarget(::google::protobuf::int32 value) {
  unitsharvesttarget_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsHarvestTarget)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsharvesttarget() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsHarvestTarget)
  return unitsharvesttarget_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsharvesttarget() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsHarvestTarget)
  return &unitsharvesttarget_;
}

// repeated int32 unitsWalkingGoal = 33 [packed = true];
inline int GameMessage::unitswalkinggoal_size() const {
  return unitswalkinggoal_.size();
}
inline void GameMessage::clear_unitswalkinggoal() {
  unitswalkinggoal_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitswalkinggoal(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsWalkingGoal)
  return unitswalkinggoal_.Get(index);
}
inline void GameMessage::set_unitswalkinggoal(int index, ::google::protobuf::int32 value) {
  unitswalkinggoal_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsWalkingGoal)
}
inline void GameMessage::add_unitswalkinggoal(::google::protobuf::int32 value) {
  unitswalkinggoal_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsWalkingGoal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitswalkinggoal() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsWalkingGoal)
  return unitswalkinggoal_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitswalkinggoal() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsWalkingGoal)
  return &unitswalkinggoal_;
}

// repeated int32 unitBuildEntity = 34 [packed = true];
inline int GameMessage::unitbuildentity_size() const {
  return unitbuildentity_.size();
}
inline void GameMessage::clear_unitbuildentity() {
  unitbuildentity_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitbuildentity(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitBuildEntity)
  return unitbuildentity_.Get(index);
}
inline void GameMessage::set_unitbuildentity(int index, ::google::protobuf::int32 value) {
  unitbuildentity_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitBuildEntity)
}
inline void GameMessage::add_unitbuildentity(::google::protobuf::int32 value) {
  unitbuildentity_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitBuildEntity)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitbuildentity() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitBuildEntity)
  return unitbuildentity_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitbuildentity() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitBuildEntity)
  return &unitbuildentity_;
}

// repeated int32 unitsCombatTarget = 42 [packed = true];
inline int GameMessage::unitscombattarget_size() const {
  return unitscombattarget_.size();
}
inline void GameMessage::clear_unitscombattarget() {
  unitscombattarget_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitscombattarget(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsCombatTarget)
  return unitscombattarget_.Get(index);
}
inline void GameMessage::set_unitscombattarget(int index, ::google::protobuf::int32 value) {
  unitscombattarget_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsCombatTarget)
}
inline void GameMessage::add_unitscombattarget(::google::protobuf::int32 value) {
  unitscombattarget_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsCombatTarget)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitscombattarget() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsCombatTarget)
  return unitscombattarget_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitscombattarget() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsCombatTarget)
  return &unitscombattarget_;
}

// repeated int32 unitsGoldCarry = 41 [packed = true];
inline int GameMessage::unitsgoldcarry_size() const {
  return unitsgoldcarry_.size();
}
inline void GameMessage::clear_unitsgoldcarry() {
  unitsgoldcarry_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsgoldcarry(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsGoldCarry)
  return unitsgoldcarry_.Get(index);
}
inline void GameMessage::set_unitsgoldcarry(int index, ::google::protobuf::int32 value) {
  unitsgoldcarry_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsGoldCarry)
}
inline void GameMessage::add_unitsgoldcarry(::google::protobuf::int32 value) {
  unitsgoldcarry_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsGoldCarry)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsgoldcarry() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsGoldCarry)
  return unitsgoldcarry_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsgoldcarry() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsGoldCarry)
  return &unitsgoldcarry_;
}

// repeated int32 unitsLumberCarry = 43 [packed = true];
inline int GameMessage::unitslumbercarry_size() const {
  return unitslumbercarry_.size();
}
inline void GameMessage::clear_unitslumbercarry() {
  unitslumbercarry_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitslumbercarry(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsLumberCarry)
  return unitslumbercarry_.Get(index);
}
inline void GameMessage::set_unitslumbercarry(int index, ::google::protobuf::int32 value) {
  unitslumbercarry_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsLumberCarry)
}
inline void GameMessage::add_unitslumbercarry(::google::protobuf::int32 value) {
  unitslumbercarry_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsLumberCarry)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitslumbercarry() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsLumberCarry)
  return unitslumbercarry_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitslumbercarry() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsLumberCarry)
  return &unitslumbercarry_;
}

// repeated int32 unitsOilCary = 44 [packed = true];
inline int GameMessage::unitsoilcary_size() const {
  return unitsoilcary_.size();
}
inline void GameMessage::clear_unitsoilcary() {
  unitsoilcary_.Clear();
}
inline ::google::protobuf::int32 GameMessage::unitsoilcary(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.unitsOilCary)
  return unitsoilcary_.Get(index);
}
inline void GameMessage::set_unitsoilcary(int index, ::google::protobuf::int32 value) {
  unitsoilcary_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.unitsOilCary)
}
inline void GameMessage::add_unitsoilcary(::google::protobuf::int32 value) {
  unitsoilcary_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.unitsOilCary)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::unitsoilcary() const {
  // @@protoc_insertion_point(field_list:GameMessage.unitsOilCary)
  return unitsoilcary_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_unitsoilcary() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.unitsOilCary)
  return &unitsoilcary_;
}

// int32 numTiles = 36;
inline void GameMessage::clear_numtiles() {
  numtiles_ = 0;
}
inline ::google::protobuf::int32 GameMessage::numtiles() const {
  // @@protoc_insertion_point(field_get:GameMessage.numTiles)
  return numtiles_;
}
inline void GameMessage::set_numtiles(::google::protobuf::int32 value) {
  
  numtiles_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.numTiles)
}

// repeated int32 tileIDs = 37 [packed = true];
inline int GameMessage::tileids_size() const {
  return tileids_.size();
}
inline void GameMessage::clear_tileids() {
  tileids_.Clear();
}
inline ::google::protobuf::int32 GameMessage::tileids(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.tileIDs)
  return tileids_.Get(index);
}
inline void GameMessage::set_tileids(int index, ::google::protobuf::int32 value) {
  tileids_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.tileIDs)
}
inline void GameMessage::add_tileids(::google::protobuf::int32 value) {
  tileids_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.tileIDs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::tileids() const {
  // @@protoc_insertion_point(field_list:GameMessage.tileIDs)
  return tileids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_tileids() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.tileIDs)
  return &tileids_;
}

// repeated int32 tileResources = 38 [packed = true];
inline int GameMessage::tileresources_size() const {
  return tileresources_.size();
}
inline void GameMessage::clear_tileresources() {
  tileresources_.Clear();
}
inline ::google::protobuf::int32 GameMessage::tileresources(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.tileResources)
  return tileresources_.Get(index);
}
inline void GameMessage::set_tileresources(int index, ::google::protobuf::int32 value) {
  tileresources_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.tileResources)
}
inline void GameMessage::add_tileresources(::google::protobuf::int32 value) {
  tileresources_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.tileResources)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::tileresources() const {
  // @@protoc_insertion_point(field_list:GameMessage.tileResources)
  return tileresources_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_tileresources() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.tileResources)
  return &tileresources_;
}

// repeated int32 tileOccupant = 39 [packed = true];
inline int GameMessage::tileoccupant_size() const {
  return tileoccupant_.size();
}
inline void GameMessage::clear_tileoccupant() {
  tileoccupant_.Clear();
}
inline ::google::protobuf::int32 GameMessage::tileoccupant(int index) const {
  // @@protoc_insertion_point(field_get:GameMessage.tileOccupant)
  return tileoccupant_.Get(index);
}
inline void GameMessage::set_tileoccupant(int index, ::google::protobuf::int32 value) {
  tileoccupant_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMessage.tileOccupant)
}
inline void GameMessage::add_tileoccupant(::google::protobuf::int32 value) {
  tileoccupant_.Add(value);
  // @@protoc_insertion_point(field_add:GameMessage.tileOccupant)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMessage::tileoccupant() const {
  // @@protoc_insertion_point(field_list:GameMessage.tileOccupant)
  return tileoccupant_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMessage::mutable_tileoccupant() {
  // @@protoc_insertion_point(field_mutable_list:GameMessage.tileOccupant)
  return &tileoccupant_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameMessage_2eproto__INCLUDED
